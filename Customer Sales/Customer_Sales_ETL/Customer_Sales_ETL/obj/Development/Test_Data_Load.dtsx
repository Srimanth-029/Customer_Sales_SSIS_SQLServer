<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/13/2024 9:34:20 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="SRIMANTH"
  DTS:CreatorName="SRIMANTH\polam"
  DTS:DTSID="{7FA708EB-999A-4BB1-AA37-2823721F0CD2}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="16393"
  DTS:ObjectName="Test_Data_Load"
  DTS:PackageType="5"
  DTS:VersionBuild="77"
  DTS:VersionGUID="{81C5DA7E-16D9-4FAE-8BB5-E71DD166B91A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Customer_Details.csv]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{93BEE8B3-CA7D-4FDC-BC31-CA23A54CA3E2}"
      DTS:ObjectName="Customer_Details.csv">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="16393"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\polam\Documents\SSIS Assignment\Data_Files\Customer_details.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer ID"
              DTS:DTSID="{D8AFE267-61A7-4CC2-95AB-3477A3A619AB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer Name"
              DTS:DTSID="{F0E2E4DD-0769-4A1B-9C17-82E4CF54D9C4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Segment"
              DTS:DTSID="{EE548C85-1325-47AE-81BA-A9F352AED9BD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Postal Code"
              DTS:DTSID="{DD112CF3-3244-4D9F-BE92-FA9C081AA764}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Customer_Details_2.csv]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{6648A4DA-3D39-4900-BD19-5661333541FC}"
      DTS:ObjectName="Customer_Details_2.csv">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="16393"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\polam\Documents\SSIS Assignment\Data_Files\Customer_details_2.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer ID"
              DTS:DTSID="{2B7A25CD-1631-448D-B8B3-03F3969747F0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer Name"
              DTS:DTSID="{A606264B-26E7-4550-84CD-549697C02890}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Segment"
              DTS:DTSID="{865693E9-2E1A-44FB-882B-97621C952E93}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Postal Code"
              DTS:DTSID="{DC0070A9-9416-48BA-BCDC-FB7BB40FCA5D}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Orders_Sales_Files.csv]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{F49382D0-4DC3-476A-84A8-4884E1F4DEA7}"
      DTS:ObjectName="Orders_Sales_Files.csv">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::Orders_Return_Files_Names_Loop]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="16393"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Order ID"
              DTS:DTSID="{09098310-0573-43E2-9AD8-671373E96E5C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Order Date"
              DTS:DTSID="{1C969A24-13B2-43A2-9B5E-1C7F10272E8B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Ship Date"
              DTS:DTSID="{A76FD22A-FB01-4965-9E48-EB567856E55C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Ship Code"
              DTS:DTSID="{F606B45A-EF73-4B36-BD11-9DFC55CA3D36}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer ID"
              DTS:DTSID="{7BFB7BD0-5B38-4383-B894-E7046A212FAA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Postal Code"
              DTS:DTSID="{3DC8AC50-91C3-4ED5-AD2B-48D67BA21F9F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Product ID"
              DTS:DTSID="{96EB642A-DE32-4A64-8AE8-18A2DF2AAA6A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Sales"
              DTS:DTSID="{D3B47625-4B77-4510-8817-182F420BE116}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Quantity"
              DTS:DTSID="{81808A08-13CE-491F-A676-46C940C9294A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Discount"
              DTS:DTSID="{B7D3C681-1C80-4B06-A102-35804851919B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Profit"
              DTS:DTSID="{0481F4FD-E4C7-4627-8425-196277B3BC71}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Region.csv]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{73C5D43E-47D1-4742-8358-3A557085EADE}"
      DTS:ObjectName="Region.csv">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="16393"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\polam\Documents\SSIS Assignment\Data_Files\Region.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Country"
              DTS:DTSID="{9EE38C29-D9E5-498A-B9B6-E1FB7352A6BB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="City"
              DTS:DTSID="{4B5276C6-750A-4A4E-9300-41C65360F03B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="State"
              DTS:DTSID="{1175C72E-40B7-4EA0-B106-9720BB8CCC62}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Postal Code"
              DTS:DTSID="{37E993D5-8F23-41D6-BDCA-E06DAE3D4639}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Region"
              DTS:DTSID="{8367B1A4-0BFD-4F8E-8C18-56DF10CA7D4F}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Returns.csv]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{C2FA8B21-E0D0-4E73-9545-1465A0762F7D}"
      DTS:ObjectName="Returns.csv">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="16393"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\polam\Documents\SSIS Assignment\Data_Files\Returns.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Order ID"
              DTS:DTSID="{D6C0AF2A-4C4B-4B0F-835D-A1F65681496A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Return reason"
              DTS:DTSID="{28AA3861-BB46-4476-A52D-B6E516D05FE3}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{ED864342-7909-427D-A7A8-A585CFCAC806}"
      DTS:ObjectName="SRIMANTH\SQLEXPRESS.Customer_Sales">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=SRIMANTH\SQLEXPRESS;Initial Catalog=Customer_Sales;Provider=SQLOLEDB.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package-{ED864342-7909-427D-A7A8-A585CFCAC806}SRIMANTH\SQLEXPRESS.Customer_Sales;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A65D6E12-091C-46CC-BC81-7C8252B2FA7B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Customer_Destination_Row_Count">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{99F35F1C-32EC-42B6-A829-54376126A680}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Customer_Source_Row_Count">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A9D5C8CE-B517-4BAB-9F60-79C06DC20B0F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;C:\\Users\\polam\\Documents\\SSIS Assignment\\Data_Files\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\polam\Documents\SSIS Assignment\Data_Files\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CC87C86D-CB97-4B62-BF6F-6DA3F5EE5755}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="File_Names_List">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2DEC1D1C-05C3-4604-8254-30A4DF6E512C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="File_Name_Loop">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{18A41E3D-5703-42C6-B627-F38B2B0FC502}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Is_Region_Processed">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B48238A3-0EBC-4DC9-A8C5-5BB23BF2340A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Skip_Files">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{52C013FE-171C-40BD-899A-7B6B38A1E452}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Variable">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{D7C30C4A-EE67-4B3B-84ED-69E286155123}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
        DTS:DTSID="{C9C4843D-C18C-43FE-929E-378BCE2BD289}"
        DTS:ObjectName="{C9C4843D-C18C-43FE-929E-378BCE2BD289}">
        <DTS:ObjectData>
          <FEEFVE
            VariableName="User::File_Names_List" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{26649EC7-33D0-45A3-8999-94A0C5E26BB2}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="File_Name">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Expression Task"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{C2C62CED-5D44-4851-9515-89487546958C}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Expression Task"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="1" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert into City"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{3631c787-1334-42c4-ad7c-6790909bcadf}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert into City"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Insert into City\Flat File Source"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="16393"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into City\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Region.csv]"
                      connectionManagerRefId="Package.ConnectionManagers[Region.csv]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[City]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].Columns[City]"
                          name="City"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Postal Code]"
                          lineageId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]"
                          name="Postal Code"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].Columns[Country]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Country]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].Columns[Country]"
                          name="Country"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].Columns[State]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[State]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].Columns[State]"
                          name="State"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Country]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Country" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Postal Code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Region]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Region" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into City\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[City]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[City]) [refTable]
where [refTable].[City] = ? and [refTable].[Postal_Code] = ? and [refTable].[State_Id] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="City_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="City" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Postal_Code" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="State_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Insert into City\Sort.Outputs[Sort Output].Columns[City]};#{Package\Foreach Loop Container\Insert into City\Sort.Outputs[Sort Output].Columns[Postal Code]};#{Package\Foreach Loop Container\Insert into City\Lookup 1.Outputs[Lookup Match Output].Columns[State_Id_Lkp]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into City\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into City\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Lookup.Inputs[Lookup Input].Columns[City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="City"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container\Insert into City\Sort.Outputs[Sort Output].Columns[City]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">City</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Lookup.Inputs[Lookup Input].Columns[Postal Code]"
                          cachedDataType="i4"
                          cachedName="Postal Code"
                          cachedSortKeyPosition="2"
                          lineageId="Package\Foreach Loop Container\Insert into City\Sort.Outputs[Sort Output].Columns[Postal Code]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Postal_Code</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Lookup.Inputs[Lookup Input].Columns[State_Id_Lkp]"
                          cachedDataType="i4"
                          cachedName="State_Id_Lkp"
                          lineageId="Package\Foreach Loop Container\Insert into City\Lookup 1.Outputs[Lookup Match Output].Columns[State_Id_Lkp]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">State_Id</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into City\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into City\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into City\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into City\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into City\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into City\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into City\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into City\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into City\Lookup 1"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup 1"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[State]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[State]) [refTable]
where [refTable].[State] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="State_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="State" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Region_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Country_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Insert into City\Sort.Outputs[Sort Output].Columns[State]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into City\Lookup 1.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into City\Lookup 1.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Lookup 1.Inputs[Lookup Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="State"
                          cachedSortKeyPosition="3"
                          lineageId="Package\Foreach Loop Container\Insert into City\Sort.Outputs[Sort Output].Columns[State]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">State</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into City\Lookup 1.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into City\Lookup 1.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Lookup 1.Outputs[Lookup Match Output].Columns[State_Id_Lkp]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\Insert into City\Lookup 1.Outputs[Lookup Match Output].Columns[State_Id_Lkp]"
                          name="State_Id_Lkp"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">State_Id</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into City\Lookup 1.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into City\Lookup 1.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into City\Lookup 1.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into City\Lookup 1.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into City\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into City\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into City\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[City]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="City"
                          cachedSortKeyPosition="1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          lineageId="Package\Foreach Loop Container\Insert into City\Sort.Outputs[Sort Output].Columns[City]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Postal Code]"
                          cachedDataType="i4"
                          cachedName="Postal Code"
                          cachedSortKeyPosition="2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Postal_Code]"
                          lineageId="Package\Foreach Loop Container\Insert into City\Sort.Outputs[Sort Output].Columns[Postal Code]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[State_Id_Lkp]"
                          cachedDataType="i4"
                          cachedName="State_Id_Lkp"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State_Id]"
                          lineageId="Package\Foreach Loop Container\Insert into City\Lookup 1.Outputs[Lookup Match Output].Columns[State_Id_Lkp]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City_Id]"
                          dataType="i4"
                          name="City_Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Postal_Code]"
                          dataType="i4"
                          name="Postal_Code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State_Id]"
                          dataType="i4"
                          name="State_Id" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into City\Sort"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into City\Sort.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Sort.Inputs[Sort Input].Columns[City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="City"
                          lineageId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].Columns[City]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Sort.Inputs[Sort Input].Columns[Postal Code]"
                          cachedDataType="i4"
                          cachedName="Postal Code"
                          lineageId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">2</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Sort.Inputs[Sort Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="State"
                          lineageId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].Columns[State]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">3</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into City\Sort.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Sort.Outputs[Sort Output].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into City\Sort.Outputs[Sort Output].Columns[City]"
                          name="City"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].Columns[City]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Sort.Outputs[Sort Output].Columns[Postal Code]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into City\Sort.Outputs[Sort Output].Columns[Postal Code]"
                          name="Postal Code"
                          sortKeyPosition="2">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into City\Sort.Outputs[Sort Output].Columns[State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into City\Sort.Outputs[Sort Output].Columns[State]"
                          name="State"
                          sortKeyPosition="3">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output].Columns[State]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Insert into City.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\Insert into City\Sort.Inputs[Sort Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Insert into City\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into City.Paths[Lookup Match Output]"
                  endId="Package\Foreach Loop Container\Insert into City\Lookup.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\Insert into City\Lookup 1.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into City.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\Insert into City\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\Insert into City\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into City.Paths[Sort Output]"
                  endId="Package\Foreach Loop Container\Insert into City\Lookup 1.Inputs[Lookup Input]"
                  name="Sort Output"
                  startId="Package\Foreach Loop Container\Insert into City\Sort.Outputs[Sort Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert into Country"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{9ed7030a-9d71-4caa-b968-d47277f77f7a}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert into Country"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container\Insert into Country.EventHandlers[OnPreExecute]"
              DTS:CreationName="OnPreExecute"
              DTS:DTSID="{f83644ce-96fa-43fa-a4e3-4279b2b8e05c}"
              DTS:EventID="1"
              DTS:EventName="OnPreExecute"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{2e1605b2-8fbe-4871-b0b3-d190997828c7}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Insert into Country\Flat File Source"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="16393"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Region.csv]"
                      connectionManagerRefId="Package.ConnectionManagers[Region.csv]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Postal Code]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]"
                          name="Postal Code"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[Country]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Country]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[Country]"
                          name="Country"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[City]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[City]"
                          name="City"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[State]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[State]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[State]"
                          name="State"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[Region]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Region]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[Region]"
                          name="Region"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Postal Code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Country]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Country" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Region]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Region" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Country\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Country]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Country]) [refTable]
where [refTable].[Country] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Country_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Country" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Insert into Country\Sort.Outputs[Sort Output].Columns[Country]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into Country\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Country\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Lookup.Inputs[Lookup Input].Columns[Country]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Country"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Sort.Outputs[Sort Output].Columns[Country]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Country</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Country\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Country\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Country\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Country\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Country\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Country\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Country\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Country]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into Country\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Country\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Country]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Country"
                          cachedSortKeyPosition="1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Country]"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Sort.Outputs[Sort Output].Columns[Country]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Country_Id]"
                          dataType="i4"
                          name="Country_Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Country]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Country" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Country\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Country\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Country\Sort"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Country\Sort.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Sort.Inputs[Sort Input].Columns[Country]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Country"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[Country]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Sort.Inputs[Sort Input].Columns[City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="City"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[City]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Sort.Inputs[Sort Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="State"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[State]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Sort.Inputs[Sort Input].Columns[Postal Code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Postal Code"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Sort.Inputs[Sort Input].Columns[Region]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Region"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[Region]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Country\Sort.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Sort.Outputs[Sort Output].Columns[Country]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Sort.Outputs[Sort Output].Columns[Country]"
                          name="Country"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[Country]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Sort.Outputs[Sort Output].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Sort.Outputs[Sort Output].Columns[City]"
                          name="City">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[City]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Sort.Outputs[Sort Output].Columns[State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Sort.Outputs[Sort Output].Columns[State]"
                          name="State">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[State]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Sort.Outputs[Sort Output].Columns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Sort.Outputs[Sort Output].Columns[Postal Code]"
                          name="Postal Code">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Country\Sort.Outputs[Sort Output].Columns[Region]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Country\Sort.Outputs[Sort Output].Columns[Region]"
                          name="Region">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output].Columns[Region]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Insert into Country.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\Insert into Country\Sort.Inputs[Sort Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Insert into Country\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into Country.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\Insert into Country\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\Insert into Country\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into Country.Paths[Sort Output]"
                  endId="Package\Foreach Loop Container\Insert into Country\Lookup.Inputs[Lookup Input]"
                  name="Sort Output"
                  startId="Package\Foreach Loop Container\Insert into Country\Sort.Outputs[Sort Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert into Customer"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{54aeb10c-fb8d-4be7-8b10-86d525ef7825}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert into Customer"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container\Insert into Customer.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{ea411749-bf29-4e4e-82aa-93104f352f17}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{3fa51a06-a8fc-4038-86ff-b9920e3f0a24}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Foreach Loop Container\Insert into Customer.EventHandlers[OnError]\Update SSIS_Load_Details to Failed"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{2a06e4b6-9018-4918-b1a7-a1d387a5f63f}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update SSIS_Load_Details to Failed"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{ED864342-7909-427D-A7A8-A585CFCAC806}"
                      SQLTask:SqlStatementSource="UPDATE SSIS_Load_Details SET Load_Status = 'Failed' where Load_Details_Id = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::Customer_Identity"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container\Insert into Customer.EventHandlers[OnPostExecute]"
              DTS:CreationName="OnPostExecute"
              DTS:DTSID="{436677ef-7a7f-470c-a251-0367b2bede07}"
              DTS:EventID="-14737633"
              DTS:EventName="OnPostExecute"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{80386c30-7fbc-4f8f-9b83-06b1385578b3}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Foreach Loop Container\Insert into Customer.EventHandlers[OnPostExecute]\Update Completed Status and Records Count"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{f76ed5c4-a77e-4499-9727-83b9c2d7a769}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update Completed Status and Records Count"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{ED864342-7909-427D-A7A8-A585CFCAC806}"
                      SQLTask:SqlStatementSource="UPDATE SSIS_Load_Details SET Records_Extracted = ? , Records_Transformed = ?,Destination_Table = ?,Load_Status =  'Completed' &#xA;where Load_Details_Id = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::Customer_Source_Row_Count"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="2"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="User::Customer_Destination_Row_Count"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="2"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="2"
                        SQLTask:DtsVariableName="User::Customer_Dim_Table_Name"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="3"
                        SQLTask:DtsVariableName="User::Customer_Table_Load_Identity"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="2"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container\Insert into Customer.EventHandlers[OnPostValidate]"
              DTS:CreationName="OnPostValidate"
              DTS:DTSID="{6e5f975d-31e6-4e70-98ce-61b73fabdba2}"
              DTS:EventID="1161247041"
              DTS:EventName="OnPostValidate"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{705d1eca-9c2e-4440-9746-3d8576f40001}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container\Insert into Customer.EventHandlers[OnPreExecute]"
              DTS:CreationName="OnPreExecute"
              DTS:DTSID="{920172dd-1dfe-447c-b69d-9ed5ffc0c221}"
              DTS:EventID="0"
              DTS:EventName="OnPreExecute"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{e005eaeb-0dd1-4969-a53f-83c37a4ee337}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Foreach Loop Container\Insert into Customer.EventHandlers[OnPreExecute]\Insert into SSIS_Load_Details"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{084fc6c8-e752-4d87-9e5e-f518aa031b5c}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Insert into SSIS_Load_Details"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{ED864342-7909-427D-A7A8-A585CFCAC806}"
                      SQLTask:SqlStatementSource="INSERT INTO SSIS_Load_Details(Data_Source,Load_Status)&#xA;SELECT ?,'Started';&#xA;&#xA;SELECT SCOPE_IDENTITY() AS Id"
                      SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="Id"
                        SQLTask:DtsVariableName="User::Customer_Table_Load_Identity" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::Customer_File_Path"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Insert into Customer\Destination_Row_Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Destination_Row_Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::Customer_Destination_Row_Count</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Customer\Destination_Row_Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Customer\Destination_Row_Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Customer\Destination_Row_Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Customer\Flat File Source"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="16393"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Customer_Details.csv]"
                      connectionManagerRefId="Package.ConnectionManagers[Customer_Details.csv]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Customer ID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer ID]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Customer ID]"
                          name="Customer ID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Name]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Name]"
                          name="Customer Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Segment]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Segment]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Segment]"
                          name="Segment"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Postal Code]"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]"
                          name="Postal Code"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer ID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Segment]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Segment" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Postal Code" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Customer\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Segment]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Segment]) [refTable]
where [refTable].[Segment] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Segment_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Segment" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Segment]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into Customer\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Customer\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Lookup.Inputs[Lookup Input].Columns[Segment]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Segment"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Segment]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Segment</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Customer\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Customer\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Lookup.Outputs[Lookup Match Output].Columns[Segment_Id_Lkp]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Lookup.Outputs[Lookup Match Output].Columns[Segment_Id_Lkp]"
                          name="Segment_Id_Lkp"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Segment_Id</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Customer\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Customer\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Customer\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Customer\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Customer\Lookup 1"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup 1"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Customer]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Customer]) [refTable]
where [refTable].[Customer_Key] = ? and [refTable].[Customer_Name] = ? and [refTable].[Segment_Id] = ? and [refTable].[City_Id] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Customer_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Customer_Key" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Customer_Name" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Segment_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Is_Active" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Created_By" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Created_Date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Modified_By" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Modified_Date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="City_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Customer ID]};#{Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Name]};#{Package\Foreach Loop Container\Insert into Customer\Lookup.Outputs[Lookup Match Output].Columns[Segment_Id_Lkp]};#{Package\Foreach Loop Container\Insert into Customer\Lookup 2.Outputs[Lookup Match Output].Columns[City_Id_lKP]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Inputs[Lookup Input].Columns[Customer ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer ID"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Customer ID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Customer_Key</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Inputs[Lookup Input].Columns[Customer Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Name"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Name]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Customer_Name</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Inputs[Lookup Input].Columns[Segment_Id_Lkp]"
                          cachedDataType="i4"
                          cachedName="Segment_Id_Lkp"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Lookup.Outputs[Lookup Match Output].Columns[Segment_Id_Lkp]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Segment_Id</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Inputs[Lookup Input].Columns[City_Id_lKP]"
                          cachedDataType="i4"
                          cachedName="City_Id_lKP"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Outputs[Lookup Match Output].Columns[City_Id_lKP]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">City_Id</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Customer\Lookup 2"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup 2"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[City]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[City]) [refTable]
where [refTable].[Postal_Code] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="City_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="City" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Postal_Code" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Inputs[Lookup Input].Columns[Postal Code]"
                          cachedDataType="i4"
                          cachedName="Postal Code"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Postal_Code</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Outputs[Lookup Match Output].Columns[City_Id_lKP]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Outputs[Lookup Match Output].Columns[City_Id_lKP]"
                          name="City_Id_lKP"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">City_Id</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Customer]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Customer ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer ID"
                          cachedSortKeyPosition="3"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Customer_Key]"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output].Columns[Customer ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Customer Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Name"
                          cachedSortKeyPosition="1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Customer_Name]"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output].Columns[Customer Name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Segment_Id_Lkp]"
                          cachedDataType="i4"
                          cachedName="Segment_Id_Lkp"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Segment_Id]"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output].Columns[Segment_Id_Lkp]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[City_Id_lKP]"
                          cachedDataType="i4"
                          cachedName="City_Id_lKP"
                          cachedSortKeyPosition="4"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City_Id]"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output].Columns[City_Id_lKP]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Customer_Id]"
                          dataType="i4"
                          name="Customer_Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Customer_Key]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Customer_Key" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Customer_Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Customer_Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Segment_Id]"
                          dataType="i4"
                          name="Segment_Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Is_Active]"
                          dataType="bool"
                          name="Is_Active" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Created_By]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Created_By" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Created_Date]"
                          dataType="dbTimeStamp"
                          name="Created_Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Modified_By]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Modified_By" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Modified_Date]"
                          dataType="dbTimeStamp"
                          name="Modified_Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City_Id]"
                          dataType="i4"
                          name="City_Id" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Customer\Sort"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Customer\Sort.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Sort.Inputs[Sort Input].Columns[Customer ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer ID"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Customer ID]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">3</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Sort.Inputs[Sort Input].Columns[Customer Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Name"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Name]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Sort.Inputs[Sort Input].Columns[Segment]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Segment"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Segment]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">2</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Sort.Inputs[Sort Input].Columns[Postal Code]"
                          cachedDataType="i4"
                          cachedName="Postal Code"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Sort.Inputs[Sort Input].Columns[Segment_Id_Lkp]"
                          cachedDataType="i4"
                          cachedName="Segment_Id_Lkp"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Lookup.Outputs[Lookup Match Output].Columns[Segment_Id_Lkp]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Sort.Inputs[Sort Input].Columns[City_Id_lKP]"
                          cachedDataType="i4"
                          cachedName="City_Id_lKP"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Outputs[Lookup Match Output].Columns[City_Id_lKP]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">4</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output].Columns[Customer ID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output].Columns[Customer ID]"
                          name="Customer ID"
                          sortKeyPosition="3">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Customer ID]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output].Columns[Customer Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output].Columns[Customer Name]"
                          name="Customer Name"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Name]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output].Columns[Segment]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output].Columns[Segment]"
                          name="Segment"
                          sortKeyPosition="2">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Segment]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output].Columns[Postal Code]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output].Columns[Postal Code]"
                          name="Postal Code">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output].Columns[Segment_Id_Lkp]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output].Columns[Segment_Id_Lkp]"
                          name="Segment_Id_Lkp">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Customer\Lookup.Outputs[Lookup Match Output].Columns[Segment_Id_Lkp]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output].Columns[City_Id_lKP]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output].Columns[City_Id_lKP]"
                          name="City_Id_lKP"
                          sortKeyPosition="4">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Customer\Lookup 2.Outputs[Lookup Match Output].Columns[City_Id_lKP]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Customer\Source_Row_Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Source_Row_Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::Customer_Source_Row_Count</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Customer\Source_Row_Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Customer\Source_Row_Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Customer\Source_Row_Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Insert into Customer.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\Insert into Customer\Source_Row_Count.Inputs[Row Count Input 1]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Insert into Customer\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into Customer.Paths[Lookup Match Output]"
                  endId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\Insert into Customer\Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into Customer.Paths[Lookup Match Output1]"
                  endId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\Insert into Customer\Lookup 2.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into Customer.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\Insert into Customer\Sort.Inputs[Sort Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\Insert into Customer\Lookup 1.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into Customer.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container\Insert into Customer\Lookup.Inputs[Lookup Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\Insert into Customer\Source_Row_Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into Customer.Paths[Row Count Output 11]"
                  endId="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\Insert into Customer\Destination_Row_Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into Customer.Paths[Sort Output]"
                  endId="Package\Foreach Loop Container\Insert into Customer\Destination_Row_Count.Inputs[Row Count Input 1]"
                  name="Sort Output"
                  startId="Package\Foreach Loop Container\Insert into Customer\Sort.Outputs[Sort Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert into Region"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{6af6230d-34bc-4587-a3c9-bbfd2230f426}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert into Region"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Insert into Region\Flat File Source"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="16393"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Region.csv]"
                      connectionManagerRefId="Package.ConnectionManagers[Region.csv]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Postal Code]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]"
                          name="Postal Code"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[Country]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Country]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[Country]"
                          name="Country"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[City]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[City]"
                          name="City"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[State]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[State]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[State]"
                          name="State"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[Region]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Region]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[Region]"
                          name="Region"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Postal Code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Country]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Country" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Region]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Region" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Region\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Region]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Region]) [refTable]
where [refTable].[Region] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Region_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Region" dataType="DT_STR" length="10" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Insert into Region\Sort.Outputs[Sort Output].Columns[Region]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into Region\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Region\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Lookup.Inputs[Lookup Input].Columns[Region]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Region"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Sort.Outputs[Sort Output].Columns[Region]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Region</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Region\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Region\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Region\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Region\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Region\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Region\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Region\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Region]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into Region\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Region\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Region]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Region"
                          cachedSortKeyPosition="1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Region\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Region]"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Sort.Outputs[Sort Output].Columns[Region]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Region\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Region_Id]"
                          dataType="i4"
                          name="Region_Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Region\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Region]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="Region" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Region\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Region\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Region\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Region\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Region\Sort"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Region\Sort.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Sort.Inputs[Sort Input].Columns[Country]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Country"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[Country]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Sort.Inputs[Sort Input].Columns[City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="City"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[City]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Sort.Inputs[Sort Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="State"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[State]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Sort.Inputs[Sort Input].Columns[Postal Code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Postal Code"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Sort.Inputs[Sort Input].Columns[Region]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Region"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[Region]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Region\Sort.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Sort.Outputs[Sort Output].Columns[Country]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Sort.Outputs[Sort Output].Columns[Country]"
                          name="Country">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[Country]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Sort.Outputs[Sort Output].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Sort.Outputs[Sort Output].Columns[City]"
                          name="City">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[City]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Sort.Outputs[Sort Output].Columns[State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Sort.Outputs[Sort Output].Columns[State]"
                          name="State">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[State]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Sort.Outputs[Sort Output].Columns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Sort.Outputs[Sort Output].Columns[Postal Code]"
                          name="Postal Code">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Region\Sort.Outputs[Sort Output].Columns[Region]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Region\Sort.Outputs[Sort Output].Columns[Region]"
                          name="Region"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output].Columns[Region]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Insert into Region.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\Insert into Region\Sort.Inputs[Sort Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Insert into Region\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into Region.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\Insert into Region\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\Insert into Region\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into Region.Paths[Sort Output]"
                  endId="Package\Foreach Loop Container\Insert into Region\Lookup.Inputs[Lookup Input]"
                  name="Sort Output"
                  startId="Package\Foreach Loop Container\Insert into Region\Sort.Outputs[Sort Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert into Segment"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{62701044-c22f-4ef5-87a2-dc6e90179c67}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert into Segment"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="16393"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Customer_Details.csv]"
                      connectionManagerRefId="Package.ConnectionManagers[Customer_Details.csv]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].Columns[Customer ID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer ID]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].Columns[Customer ID]"
                          name="Customer ID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Name]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Name]"
                          name="Customer Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].Columns[Segment]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Segment]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].Columns[Segment]"
                          name="Segment"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Postal Code]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]"
                          name="Postal Code"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer ID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Segment]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Segment" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Postal Code" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="16393"
                  name="Flat File Source 1"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Customer_Details_2.csv]"
                      connectionManagerRefId="Package.ConnectionManagers[Customer_Details_2.csv]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].Columns[Customer ID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].ExternalColumns[Customer ID]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].Columns[Customer ID]"
                          name="Customer ID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].Columns[Customer Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].ExternalColumns[Customer Name]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].Columns[Customer Name]"
                          name="Customer Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].Columns[Segment]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].ExternalColumns[Segment]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].Columns[Segment]"
                          name="Segment"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].Columns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].ExternalColumns[Postal Code]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].Columns[Postal Code]"
                          name="Postal Code"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].ExternalColumns[Customer ID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].ExternalColumns[Customer Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].ExternalColumns[Segment]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Segment" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].ExternalColumns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Postal Code" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Segment\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Segment]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Segment]) [refTable]
where [refTable].[Segment] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Segment_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Segment" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Insert into Segment\Merge.Outputs[Merge Output 1].Columns[Segment]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into Segment\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Segment\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Lookup.Inputs[Lookup Input].Columns[Segment]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Segment"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Sort 2.Outputs[Sort Output].Columns[Segment]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Segment</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Segment\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Segment\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Segment\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Segment\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Segment\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Segment\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Segment\Merge"
                  componentClassID="Microsoft.Merge"
                  contactInfo="Merge;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Combines rows from multiple sorted data flows into one sorted data flow. Unlike the Merge Join, all rows flow to the output. For example, combine two sorted lists of customers into a single sorted list. If sorting is not important, use the Union All transformation. "
                  name="Merge"
                  version="1">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Segment\Merge.Inputs[Merge Input 1]"
                      name="Merge Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Merge.Inputs[Merge Input 1].Columns[Segment]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Segment"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Sort.Outputs[Sort Output].Columns[Segment]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\Insert into Segment\Merge.Outputs[Merge Output 1].Columns[Segment]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Segment\Merge.Inputs[Merge Input 2]"
                      name="Merge Input 2">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Merge.Inputs[Merge Input 2].Columns[Segment]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Segment"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Outputs[Sort Output].Columns[Segment]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\Insert into Segment\Merge.Outputs[Merge Output 1].Columns[Segment]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Segment\Merge.Outputs[Merge Output 1]"
                      isSorted="true"
                      name="Merge Output 1">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Merge.Outputs[Merge Output 1].Columns[Segment]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Merge.Outputs[Merge Output 1].Columns[Segment]"
                          name="Segment"
                          sortKeyPosition="1" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Segment\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Segment]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into Segment\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Segment\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Segment]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Segment"
                          cachedSortKeyPosition="1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into Segment\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Segment]"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Sort 2.Outputs[Sort Output].Columns[Segment]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Segment_Id]"
                          dataType="i4"
                          name="Segment_Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Segment]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Segment" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Segment\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into Segment\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Segment\Sort"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Segment\Sort.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort.Inputs[Sort Input].Columns[Customer ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer ID"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].Columns[Customer ID]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort.Inputs[Sort Input].Columns[Customer Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Name"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Name]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort.Inputs[Sort Input].Columns[Segment]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Segment"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].Columns[Segment]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort.Inputs[Sort Input].Columns[Postal Code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Postal Code"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Segment\Sort.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort.Outputs[Sort Output].Columns[Customer ID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Sort.Outputs[Sort Output].Columns[Customer ID]"
                          name="Customer ID">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].Columns[Customer ID]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort.Outputs[Sort Output].Columns[Customer Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Sort.Outputs[Sort Output].Columns[Customer Name]"
                          name="Customer Name">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Name]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort.Outputs[Sort Output].Columns[Segment]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Sort.Outputs[Sort Output].Columns[Segment]"
                          name="Segment"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].Columns[Segment]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort.Outputs[Sort Output].Columns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Sort.Outputs[Sort Output].Columns[Postal Code]"
                          name="Postal Code">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Segment\Sort 1"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort 1"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Inputs[Sort Input].Columns[Customer ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer ID"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].Columns[Customer ID]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Inputs[Sort Input].Columns[Customer Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Name"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].Columns[Customer Name]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Inputs[Sort Input].Columns[Segment]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Segment"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].Columns[Segment]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Inputs[Sort Input].Columns[Postal Code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Postal Code"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].Columns[Postal Code]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Outputs[Sort Output].Columns[Customer ID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Outputs[Sort Output].Columns[Customer ID]"
                          name="Customer ID">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].Columns[Customer ID]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Outputs[Sort Output].Columns[Customer Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Outputs[Sort Output].Columns[Customer Name]"
                          name="Customer Name">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].Columns[Customer Name]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Outputs[Sort Output].Columns[Segment]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Outputs[Sort Output].Columns[Segment]"
                          name="Segment"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].Columns[Segment]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Outputs[Sort Output].Columns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Outputs[Sort Output].Columns[Postal Code]"
                          name="Postal Code">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output].Columns[Postal Code]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into Segment\Sort 2"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort 2"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into Segment\Sort 2.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort 2.Inputs[Sort Input].Columns[Segment]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Segment"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Merge.Outputs[Merge Output 1].Columns[Segment]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into Segment\Sort 2.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into Segment\Sort 2.Outputs[Sort Output].Columns[Segment]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into Segment\Sort 2.Outputs[Sort Output].Columns[Segment]"
                          name="Segment"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into Segment\Merge.Outputs[Merge Output 1].Columns[Segment]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Insert into Segment.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\Insert into Segment\Sort.Inputs[Sort Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Insert into Segment\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into Segment.Paths[Flat File Source Output1]"
                  endId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Inputs[Sort Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into Segment.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\Insert into Segment\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\Insert into Segment\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into Segment.Paths[Merge Output 1]"
                  endId="Package\Foreach Loop Container\Insert into Segment\Sort 2.Inputs[Sort Input]"
                  name="Merge Output 1"
                  startId="Package\Foreach Loop Container\Insert into Segment\Merge.Outputs[Merge Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into Segment.Paths[Sort Output]"
                  endId="Package\Foreach Loop Container\Insert into Segment\Merge.Inputs[Merge Input 1]"
                  name="Sort Output"
                  startId="Package\Foreach Loop Container\Insert into Segment\Sort.Outputs[Sort Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into Segment.Paths[Sort Output1]"
                  endId="Package\Foreach Loop Container\Insert into Segment\Merge.Inputs[Merge Input 2]"
                  name="Sort Output"
                  startId="Package\Foreach Loop Container\Insert into Segment\Sort 1.Outputs[Sort Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into Segment.Paths[Sort Output2]"
                  endId="Package\Foreach Loop Container\Insert into Segment\Lookup.Inputs[Lookup Input]"
                  name="Sort Output"
                  startId="Package\Foreach Loop Container\Insert into Segment\Sort 2.Outputs[Sort Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert into State"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{4c995d7e-1211-4ab8-9b26-750583ac15ef}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert into State"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Insert into State\Flat File Source"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="16393"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into State\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Region.csv]"
                      connectionManagerRefId="Package.ConnectionManagers[Region.csv]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[State]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[State]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[State]"
                          name="State"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[Region]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Region]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[Region]"
                          name="Region"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[Country]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Country]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[Country]"
                          name="Country"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[City]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[City]"
                          name="City"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Postal Code]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]"
                          name="Postal Code"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Country]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Country" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Postal Code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Region]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Region" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into State\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[State]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[State]) [refTable]
where [refTable].[State] = ? and [refTable].[Region_Id] = ? and [refTable].[Country_Id] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="State_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="State" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Region_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Country_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[State]};#{Package\Foreach Loop Container\Insert into State\Lookup 1.Outputs[Lookup Match Output].Columns[Region_Id_Lkp]};#{Package\Foreach Loop Container\Insert into State\Lookup 2.Outputs[Lookup Match Output].Columns[Country_Id_Lkp]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into State\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into State\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Lookup.Inputs[Lookup Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="State"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[State]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">State</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Lookup.Inputs[Lookup Input].Columns[Region_Id_Lkp]"
                          cachedDataType="i4"
                          cachedName="Region_Id_Lkp"
                          lineageId="Package\Foreach Loop Container\Insert into State\Lookup 1.Outputs[Lookup Match Output].Columns[Region_Id_Lkp]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Region_Id</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Lookup.Inputs[Lookup Input].Columns[Country_Id_Lkp]"
                          cachedDataType="i4"
                          cachedName="Country_Id_Lkp"
                          lineageId="Package\Foreach Loop Container\Insert into State\Lookup 2.Outputs[Lookup Match Output].Columns[Country_Id_Lkp]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Country_Id</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into State\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into State\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into State\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into State\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into State\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into State\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into State\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into State\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into State\Lookup 1"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup 1"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Region]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Region]) [refTable]
where [refTable].[Region] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Region_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Region" dataType="DT_STR" length="10" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[Region]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into State\Lookup 1.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into State\Lookup 1.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Lookup 1.Inputs[Lookup Input].Columns[Region]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Region"
                          cachedSortKeyPosition="2"
                          lineageId="Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[Region]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Region</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into State\Lookup 1.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into State\Lookup 1.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Lookup 1.Outputs[Lookup Match Output].Columns[Region_Id_Lkp]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\Insert into State\Lookup 1.Outputs[Lookup Match Output].Columns[Region_Id_Lkp]"
                          name="Region_Id_Lkp"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Region_Id</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into State\Lookup 1.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into State\Lookup 1.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into State\Lookup 1.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into State\Lookup 1.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into State\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into State\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into State\Lookup 2"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup 2"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Country]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Country]) [refTable]
where [refTable].[Country] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Country_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Country" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[Country]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into State\Lookup 2.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into State\Lookup 2.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Lookup 2.Inputs[Lookup Input].Columns[Country]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Country"
                          lineageId="Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[Country]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Country</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into State\Lookup 2.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into State\Lookup 2.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Lookup 2.Outputs[Lookup Match Output].Columns[Country_Id_Lkp]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\Insert into State\Lookup 2.Outputs[Lookup Match Output].Columns[Country_Id_Lkp]"
                          name="Country_Id_Lkp"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Country_Id</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into State\Lookup 2.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into State\Lookup 2.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert into State\Lookup 2.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into State\Lookup 2.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Lookup 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into State\Lookup 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Lookup 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into State\Lookup 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into State\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[State]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="State"
                          cachedSortKeyPosition="1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          lineageId="Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[State]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Region_Id_Lkp]"
                          cachedDataType="i4"
                          cachedName="Region_Id_Lkp"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Region_Id]"
                          lineageId="Package\Foreach Loop Container\Insert into State\Lookup 1.Outputs[Lookup Match Output].Columns[Region_Id_Lkp]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Country_Id_Lkp]"
                          cachedDataType="i4"
                          cachedName="Country_Id_Lkp"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Country_Id]"
                          lineageId="Package\Foreach Loop Container\Insert into State\Lookup 2.Outputs[Lookup Match Output].Columns[Country_Id_Lkp]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State_Id]"
                          dataType="i4"
                          name="State_Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Region_Id]"
                          dataType="i4"
                          name="Region_Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Country_Id]"
                          dataType="i4"
                          name="Country_Id" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert into State\Sort"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert into State\Sort.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Sort.Inputs[Sort Input].Columns[Country]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Country"
                          lineageId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[Country]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Sort.Inputs[Sort Input].Columns[City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="City"
                          lineageId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[City]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Sort.Inputs[Sort Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="State"
                          lineageId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[State]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Sort.Inputs[Sort Input].Columns[Postal Code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Postal Code"
                          lineageId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Sort.Inputs[Sort Input].Columns[Region]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Region"
                          lineageId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[Region]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">2</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[Country]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[Country]"
                          name="Country">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[Country]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[City]"
                          name="City">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[City]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[State]"
                          name="State"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[State]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[Postal Code]"
                          name="Postal Code">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[Postal Code]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[Region]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output].Columns[Region]"
                          name="Region"
                          sortKeyPosition="2">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output].Columns[Region]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Insert into State.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\Insert into State\Sort.Inputs[Sort Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Insert into State\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into State.Paths[Lookup Match Output]"
                  endId="Package\Foreach Loop Container\Insert into State\Lookup 2.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\Insert into State\Lookup 1.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into State.Paths[Lookup Match Output1]"
                  endId="Package\Foreach Loop Container\Insert into State\Lookup.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\Insert into State\Lookup 2.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into State.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\Insert into State\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\Insert into State\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert into State.Paths[Sort Output]"
                  endId="Package\Foreach Loop Container\Insert into State\Lookup 1.Inputs[Lookup Input]"
                  name="Sort Output"
                  startId="Package\Foreach Loop Container\Insert into State\Sort.Outputs[Sort Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{81C6FFB5-F813-48F1-8A2E-90353D4CB6FE}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::File_Name_Loop] == &quot;C:\\Users\\polam\\Documents\\SSIS Assignment\\Data_Files\\Region.csv&quot;"
          DTS:From="Package\Foreach Loop Container\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Insert into Country" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{B203EAE7-9DF2-42AD-8540-1B89C2B9DFE2}"
          DTS:From="Package\Foreach Loop Container\Insert into Country"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Insert into Region" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{3294A66E-C9A9-413E-9CE9-ABB0C2D5432D}"
          DTS:From="Package\Foreach Loop Container\Insert into Region"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\Insert into State" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{1A958094-6263-4817-9874-91D13643D44B}"
          DTS:From="Package\Foreach Loop Container\Insert into State"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\Insert into City" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{556E283A-A268-4E21-B910-84E9A37484DE}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::File_Name_Loop] == &quot;C:\\Users\\polam\\Documents\\SSIS Assignment\\Data_Files\\Customer_details.csv&quot;"
          DTS:From="Package\Foreach Loop Container\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Foreach Loop Container\Insert into Segment" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{56054E16-B57F-4861-B0E6-7BD25CCD4953}"
          DTS:From="Package\Foreach Loop Container\Insert into Segment"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Foreach Loop Container\Insert into Customer" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{E7F2B27C-F3CA-418A-B116-1A007B060A16}"
          DTS:ObjectName="{E7F2B27C-F3CA-418A-B116-1A007B060A16}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::File_Name_Loop" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container 4"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{0b680cc3-ddc1-4fec-a6d1-c4638b0fa7b0}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container 4">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
        DTS:DTSID="{e3b8d883-e8a3-4b8a-8f55-d6ca2be73809}"
        DTS:ObjectName="{4EDFE011-99B6-4BB9-AA0C-435C6B1EF340}">
        <DTS:ObjectData>
          <FEEFVE
            VariableName="User::Orders_Return_File_Name_List" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 4\Capture Sales Loop"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{bbcf0d34-abce-41ae-a005-7375c6fcca8c}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Capture Sales Loop"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::v_Sales_Count_Loop] =  @[User::v_Sales_Count_Loop] + 1" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 4\Expression Task 1"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{d1463a8b-e1db-40d6-8e63-d6376e5b1b7b}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Expression Task 1"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="1" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 4\Expression Task 2"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{eff26e97-ef98-4b18-8566-f484bdc91b88}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Expression Task 2"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::Is_Returns_Processed] = True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 4\Insert into Orders Table"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{d0528b5e-ab49-4e78-895c-27e42a4e1e4a}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert into Orders Table"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="2">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{bb6b087c-397b-4c2a-be16-e6984e606073}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{c098cd14-7dde-41ba-b91f-7ff42859e390}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnError]\Update SSIS_Load_Details to Failed"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{8d1bd68c-807a-4be0-b61a-2cd6f98e14a6}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update SSIS_Load_Details to Failed"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{ED864342-7909-427D-A7A8-A585CFCAC806}"
                      SQLTask:SqlStatementSource="UPDATE SSIS_Load_Details SET Load_Status = 'Failed' where Load_Details_Id = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::Customer_Table_Load_Identity"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnPostExecute]"
              DTS:CreationName="OnPostExecute"
              DTS:DTSID="{fa68efc0-8c7f-4d5b-b752-d9d7b86d4187}"
              DTS:EventID="-592138"
              DTS:EventName="OnPostExecute"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{88c85f24-2b04-4d51-9a0d-1d6a3d22c05a}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnPostExecute]\Expression Task"
                  DTS:CreationName="Microsoft.ExpressionTask"
                  DTS:Description="Expression Task"
                  DTS:DTSID="{2578b8b5-3c5e-4e8d-afeb-1812e189c905}"
                  DTS:ExecutableType="Microsoft.ExpressionTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Expression Task"
                  DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <ExpressionTask
                      Expression="@[User::Order_Return_Dim_Table_Name] = &quot;Customer_Sales.dbo.Orders&quot;" />
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnPostExecute]\Update Completed Status and Records Count"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{4e501375-ed1a-4a4c-a1ad-252ad49902ab}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update Completed Status and Records Count"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{ED864342-7909-427D-A7A8-A585CFCAC806}"
                      SQLTask:SqlStatementSource="UPDATE SSIS_Load_Details SET Records_Extracted = ? , Records_Transformed = ?,Destination_Table = ?,Load_Status =  'Completed' &#xA;where Load_Details_Id = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::Sales_File_Source_Row_Count"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="2"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="User::Sales_File_Destination_Row_Count"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="2"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="2"
                        SQLTask:DtsVariableName="User::Order_Return_Dim_Table_Name"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="3"
                        SQLTask:DtsVariableName="User::Customer_Table_Load_Identity"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="2"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint]"
                  DTS:CreationName=""
                  DTS:DTSID="{662f8452-c046-46c6-9e3e-7bed58a589b0}"
                  DTS:From="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnPostExecute]\Expression Task"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint"
                  DTS:To="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnPostExecute]\Update Completed Status and Records Count" />
              </DTS:PrecedenceConstraints>
            </DTS:EventHandler>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnPreExecute]"
              DTS:CreationName="OnPreExecute"
              DTS:DTSID="{b5547abf-6a1f-4832-b47c-d62c6d995968}"
              DTS:EventID="0"
              DTS:EventName="OnPreExecute"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{7bd63e56-202d-4028-8c04-2aece1902bad}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnPreExecute]\Insert into SSIS_Load_Details"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{2de71ebb-1c74-4a74-ad7f-b5600d26c88d}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Insert into SSIS_Load_Details"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{ED864342-7909-427D-A7A8-A585CFCAC806}"
                      SQLTask:SqlStatementSource="INSERT INTO SSIS_Load_Details(Data_Source,Load_Status,Package_Log_Id)&#xA;SELECT ?,'Started',?;&#xA;&#xA;SELECT SCOPE_IDENTITY() AS Id"
                      SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="Id"
                        SQLTask:DtsVariableName="User::Customer_Table_Load_Identity" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::Orders_Return_Files_Names_Loop"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="User::v_package_log_id"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="16393"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">true</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Orders_Sales_Files.csv]"
                      connectionManagerRefId="Package.ConnectionManagers[Orders_Sales_Files.csv]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output].Columns[Order ID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Order ID]"
                          length="50"
                          lineageId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output].Columns[Order ID]"
                          name="Order ID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Order ID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Order ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Order Date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Order Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Ship Date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Ship Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Ship Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Ship Code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer ID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Postal Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Postal Code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Product ID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Product ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Sales]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Sales" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Quantity]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Quantity" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Discount]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Discount" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Profit]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Profit" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Orders]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Orders]) [refTable]
where [refTable].[Order_Key] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Order_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Order_Key" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container 4\Insert into Orders Table\Sort.Outputs[Sort Output].Columns[Order ID]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup.Inputs[Lookup Input].Columns[Order ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Order ID"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container 4\Insert into Orders Table\Sort.Outputs[Sort Output].Columns[Order ID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Order_Key</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Orders Table\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Orders]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Order ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Order ID"
                          cachedSortKeyPosition="1"
                          externalMetadataColumnId="Package\Foreach Loop Container 4\Insert into Orders Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Order_Key]"
                          lineageId="Package\Foreach Loop Container 4\Insert into Orders Table\Sort.Outputs[Sort Output].Columns[Order ID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Order_Id]"
                          dataType="i4"
                          name="Order_Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Order_Key]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Order_Key" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Orders Table\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Orders Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Orders Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Orders Table\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::Sales_File_Source_Row_Count</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Orders Table\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Orders Table\Row Count 1"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count 1">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::Sales_File_Destination_Row_Count</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\Row Count 1.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\Row Count 1.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Orders Table\Row Count 1.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Orders Table\Sort"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\Sort.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Sort.Inputs[Sort Input].Columns[Order ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Order ID"
                          lineageId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output].Columns[Order ID]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Orders Table\Sort.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Orders Table\Sort.Outputs[Sort Output].Columns[Order ID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container 4\Insert into Orders Table\Sort.Outputs[Sort Output].Columns[Order ID]"
                          name="Order ID"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output].Columns[Order ID]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Orders Table.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container 4\Insert into Orders Table\Row Count.Inputs[Row Count Input 1]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Orders Table.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container 4\Insert into Orders Table\Row Count 1.Inputs[Row Count Input 1]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Orders Table.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container 4\Insert into Orders Table\Sort.Inputs[Sort Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container 4\Insert into Orders Table\Row Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Orders Table.Paths[Row Count Output 11]"
                  endId="Package\Foreach Loop Container 4\Insert into Orders Table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container 4\Insert into Orders Table\Row Count 1.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Orders Table.Paths[Sort Output]"
                  endId="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup.Inputs[Lookup Input]"
                  name="Sort Output"
                  startId="Package\Foreach Loop Container 4\Insert into Orders Table\Sort.Outputs[Sort Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 4\Insert into Returns"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{ed66b15b-99c4-4037-8096-af5c05ea2e47}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert into Returns"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{cb06a023-5d93-4b64-86db-a6ec3d940a3a}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{275d8fcb-6cd0-4b6e-a089-d5a9915764c8}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnError]\Update SSIS_Load_Details to Failed"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{bd215f6f-c26c-405f-b1bd-1e4161054172}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update SSIS_Load_Details to Failed"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{ED864342-7909-427D-A7A8-A585CFCAC806}"
                      SQLTask:SqlStatementSource="UPDATE SSIS_Load_Details SET Load_Status = 'Failed' where Load_Details_Id = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::Customer_Table_Load_Identity"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnPostExecute]"
              DTS:CreationName="OnPostExecute"
              DTS:DTSID="{afc54390-a23b-4663-a18b-92d58b4f1863}"
              DTS:EventID="0"
              DTS:EventName="OnPostExecute"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{4d9793fc-e984-46df-a965-42570bca3a28}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnPostExecute]\Expression Task"
                  DTS:CreationName="Microsoft.ExpressionTask"
                  DTS:Description="Expression Task"
                  DTS:DTSID="{3064a9c6-61de-4303-9c8f-e2e065852fa1}"
                  DTS:ExecutableType="Microsoft.ExpressionTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Expression Task"
                  DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <ExpressionTask
                      Expression="@[User::Order_Return_Dim_Table_Name] = &quot;Customer_Sales.dbo.Return&quot;" />
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnPostExecute]\Update Completed Status and Records Count"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{a779d480-454e-482f-9c0d-3e9f91a7bb1f}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update Completed Status and Records Count"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{ED864342-7909-427D-A7A8-A585CFCAC806}"
                      SQLTask:SqlStatementSource="UPDATE SSIS_Load_Details SET Records_Extracted = ? , Records_Transformed = ?,Destination_Table = ?,Load_Status =  'Completed' &#xA;where Load_Details_Id = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::Returns_Source_Row_Count"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="2"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="User::Returns_Destination_Row_Count"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="2"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="2"
                        SQLTask:DtsVariableName="User::Order_Return_Dim_Table_Name"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="3"
                        SQLTask:DtsVariableName="User::Customer_Table_Load_Identity"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="2"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint]"
                  DTS:CreationName=""
                  DTS:DTSID="{16fc591d-add8-4fc8-968c-241019c34acc}"
                  DTS:From="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnPostExecute]\Expression Task"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint"
                  DTS:To="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnPostExecute]\Update Completed Status and Records Count" />
              </DTS:PrecedenceConstraints>
            </DTS:EventHandler>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnPreExecute]"
              DTS:CreationName="OnPreExecute"
              DTS:DTSID="{896caad4-b7f4-4162-86f6-97c9be88c347}"
              DTS:EventID="0"
              DTS:EventName="OnPreExecute"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{72da3942-0879-44de-998c-586518140ff1}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnPreExecute]\Insert into SSIS_Load_Details"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{6b02f50a-b8fc-4126-8e30-cab9e149cd92}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Insert into SSIS_Load_Details"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{ED864342-7909-427D-A7A8-A585CFCAC806}"
                      SQLTask:SqlStatementSource="INSERT INTO SSIS_Load_Details(Data_Source,Load_Status,Package_Log_Id)&#xA;SELECT ?,'Started',?;&#xA;&#xA;SELECT SCOPE_IDENTITY() AS Id"
                      SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="Id"
                        SQLTask:DtsVariableName="User::Customer_Table_Load_Identity" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::Orders_Return_Files_Names_Loop"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="User::v_package_log_id"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="16393"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Returns.csv]"
                      connectionManagerRefId="Package.ConnectionManagers[Returns.csv]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output].Columns[Order ID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Order ID]"
                          length="50"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output].Columns[Order ID]"
                          name="Order ID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output].Columns[Return reason]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Return reason]"
                          length="50"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output].Columns[Return reason]"
                          name="Return reason"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Order ID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Order ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Return reason]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Return reason" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Return_Reason]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Return_Reason]) [refTable]
where [refTable].[Return_Reason] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Return_Reason_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Return_Reason" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output].Columns[Return reason]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Inputs[Lookup Input].Columns[Return reason]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Return reason"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output].Columns[Return reason]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Return_Reason</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Outputs[Lookup Match Output].Columns[Return_Reason_Id_Lkp]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Outputs[Lookup Match Output].Columns[Return_Reason_Id_Lkp]"
                          name="Return_Reason_Id_Lkp"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Return_Reason_Id</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup 1"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Orders]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Orders]) [refTable]
where [refTable].[Order_Key] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Order_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Order_Key" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output].Columns[Order ID]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Inputs[Lookup Input].Columns[Order ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Order ID"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output].Columns[Order ID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Order_Key</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Outputs[Lookup Match Output].Columns[Order_Id_Lkp]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Outputs[Lookup Match Output].Columns[Order_Id_Lkp]"
                          name="Order_Id_Lkp"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Order_Id</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup 2"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Returns]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Returns]) [refTable]
where [refTable].[Return_Reason_Id] = ? and [refTable].[Order_Id] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Return_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Order_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Return_Reason_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container 4\Insert into Returns\Sort.Outputs[Sort Output].Columns[Return_Reason_Id_Lkp]};#{Package\Foreach Loop Container 4\Insert into Returns\Sort.Outputs[Sort Output].Columns[Order_Id_Lkp]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2.Inputs[Lookup Input].Columns[Order_Id_Lkp]"
                          cachedDataType="i4"
                          cachedName="Order_Id_Lkp"
                          cachedSortKeyPosition="2"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Outputs[Sort Output].Columns[Order_Id_Lkp]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Order_Id</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2.Inputs[Lookup Input].Columns[Return_Reason_Id_Lkp]"
                          cachedDataType="i4"
                          cachedName="Return_Reason_Id_Lkp"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Outputs[Sort Output].Columns[Return_Reason_Id_Lkp]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Return_Reason_Id</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Returns]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Order_Id_Lkp]"
                          cachedDataType="i4"
                          cachedName="Order_Id_Lkp"
                          cachedSortKeyPosition="2"
                          externalMetadataColumnId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Order_Id]"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Outputs[Sort Output].Columns[Order_Id_Lkp]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Return_Reason_Id_Lkp]"
                          cachedDataType="i4"
                          cachedName="Return_Reason_Id_Lkp"
                          cachedSortKeyPosition="1"
                          externalMetadataColumnId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Return_Reason_Id]"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Outputs[Sort Output].Columns[Return_Reason_Id_Lkp]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Return_Id]"
                          dataType="i4"
                          name="Return_Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Order_Id]"
                          dataType="i4"
                          name="Order_Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Return_Reason_Id]"
                          dataType="i4"
                          name="Return_Reason_Id" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Returns\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::Returns_Source_Row_Count</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Returns\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Returns\Row Count 1"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count 1">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::Returns_Destination_Row_Count</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Row Count 1.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Row Count 1.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Returns\Row Count 1.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Returns\Sort"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Inputs[Sort Input].Columns[Order ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Order ID"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output].Columns[Order ID]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Inputs[Sort Input].Columns[Return reason]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Return reason"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output].Columns[Return reason]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Inputs[Sort Input].Columns[Return_Reason_Id_Lkp]"
                          cachedDataType="i4"
                          cachedName="Return_Reason_Id_Lkp"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Outputs[Lookup Match Output].Columns[Return_Reason_Id_Lkp]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Inputs[Sort Input].Columns[Order_Id_Lkp]"
                          cachedDataType="i4"
                          cachedName="Order_Id_Lkp"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Outputs[Lookup Match Output].Columns[Order_Id_Lkp]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">2</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Outputs[Sort Output].Columns[Order ID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Outputs[Sort Output].Columns[Order ID]"
                          name="Order ID">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output].Columns[Order ID]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Outputs[Sort Output].Columns[Return reason]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Outputs[Sort Output].Columns[Return reason]"
                          name="Return reason">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output].Columns[Return reason]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Outputs[Sort Output].Columns[Return_Reason_Id_Lkp]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Outputs[Sort Output].Columns[Return_Reason_Id_Lkp]"
                          name="Return_Reason_Id_Lkp"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container 4\Insert into Returns\Lookup.Outputs[Lookup Match Output].Columns[Return_Reason_Id_Lkp]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Outputs[Sort Output].Columns[Order_Id_Lkp]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Outputs[Sort Output].Columns[Order_Id_Lkp]"
                          name="Order_Id_Lkp"
                          sortKeyPosition="2">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Outputs[Lookup Match Output].Columns[Order_Id_Lkp]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Returns.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container 4\Insert into Returns\Row Count.Inputs[Row Count Input 1]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Returns.Paths[Lookup Match Output]"
                  endId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Returns.Paths[Lookup Match Output1]"
                  endId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Inputs[Sort Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Returns.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container 4\Insert into Returns\Row Count 1.Inputs[Row Count Input 1]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Returns.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container 4\Insert into Returns\Lookup.Inputs[Lookup Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container 4\Insert into Returns\Row Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Returns.Paths[Row Count Output 11]"
                  endId="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container 4\Insert into Returns\Row Count 1.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Returns.Paths[Sort Output]"
                  endId="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2.Inputs[Lookup Input]"
                  name="Sort Output"
                  startId="Package\Foreach Loop Container 4\Insert into Returns\Sort.Outputs[Sort Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 4\Insert into Return_Reason"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{83f4618a-6551-4b44-8eed-240df2c44b7a}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert into Return_Reason"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{6f93ee1f-22ee-4d68-86cd-01e5840b0589}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{51fc1438-1884-42a0-9fe8-85c5ad4bb613}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnError]\Update SSIS_Load_Details to Failed"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{abd9b3cb-5d01-4a16-a45a-1f6dbf1a7b55}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update SSIS_Load_Details to Failed"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{ED864342-7909-427D-A7A8-A585CFCAC806}"
                      SQLTask:SqlStatementSource="UPDATE SSIS_Load_Details SET Load_Status = 'Failed' where Load_Details_Id = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::Customer_Table_Load_Identity"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnPostExecute]"
              DTS:CreationName="OnPostExecute"
              DTS:DTSID="{1b53b6ed-1794-40cb-924f-1263faa37322}"
              DTS:EventID="892613699"
              DTS:EventName="OnPostExecute"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{452740b1-b7e9-4076-ba32-6a377c15c8ff}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnPostExecute]\Expression Task"
                  DTS:CreationName="Microsoft.ExpressionTask"
                  DTS:Description="Expression Task"
                  DTS:DTSID="{ce7c42f1-d588-404b-8d8d-d6ae6bec7c11}"
                  DTS:ExecutableType="Microsoft.ExpressionTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Expression Task"
                  DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <ExpressionTask
                      Expression="@[User::Order_Return_Dim_Table_Name] = &quot;Customer_Sales.dbo.Return_Reason&quot;" />
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnPostExecute]\Update Completed Status and Records Count"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{a77c07a0-2516-421a-a23c-df4143c49e5e}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update Completed Status and Records Count"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{ED864342-7909-427D-A7A8-A585CFCAC806}"
                      SQLTask:SqlStatementSource="UPDATE SSIS_Load_Details SET Records_Extracted = ? , Records_Transformed = ?,Destination_Table = ?,Load_Status =  'Completed' &#xA;where Load_Details_Id = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::Returns_Source_Row_Count"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="2"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="User::Returns_Destination_Row_Count"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="2"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="2"
                        SQLTask:DtsVariableName="User::Order_Return_Dim_Table_Name"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="3"
                        SQLTask:DtsVariableName="User::Customer_Table_Load_Identity"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="2"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint]"
                  DTS:CreationName=""
                  DTS:DTSID="{eaa55b76-fb3b-4647-9d99-7106476ac72c}"
                  DTS:From="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnPostExecute]\Expression Task"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint"
                  DTS:To="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnPostExecute]\Update Completed Status and Records Count" />
              </DTS:PrecedenceConstraints>
            </DTS:EventHandler>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnPreExecute]"
              DTS:CreationName="OnPreExecute"
              DTS:DTSID="{b0f6fa75-1ca7-481f-9c1a-1bb7631f99e6}"
              DTS:EventID="1271310319"
              DTS:EventName="OnPreExecute"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{79f6f48d-9782-43e1-8ab9-62e28fae8279}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnPreExecute]\Insert into SSIS_Load_Details"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{cbf8c146-8996-45a0-bdaa-451b6b91a3a7}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Insert into SSIS_Load_Details"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{ED864342-7909-427D-A7A8-A585CFCAC806}"
                      SQLTask:SqlStatementSource="INSERT INTO SSIS_Load_Details(Data_Source,Load_Status,Package_Log_Id)&#xA;SELECT ?,'Started',?;&#xA;&#xA;SELECT SCOPE_IDENTITY() AS Id"
                      SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="Id"
                        SQLTask:DtsVariableName="User::Customer_Table_Load_Identity" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::Orders_Return_Files_Names_Loop"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="User::v_package_log_id"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="16393"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Returns.csv]"
                      connectionManagerRefId="Package.ConnectionManagers[Returns.csv]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Outputs[Flat File Source Output].Columns[Return reason]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Return reason]"
                          length="50"
                          lineageId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Outputs[Flat File Source Output].Columns[Return reason]"
                          name="Return reason"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Order ID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Order ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Return reason]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Return reason" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Return_Reason]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Return_Reason]) [refTable]
where [refTable].[Return_Reason] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Return_Reason_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Return_Reason" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container 4\Insert into Return_Reason\Sort.Outputs[Sort Output].Columns[Return reason]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup.Inputs[Lookup Input].Columns[Return reason]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Return reason"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container 4\Insert into Return_Reason\Sort.Outputs[Sort Output].Columns[Return reason]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Return_Reason</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Return_Reason\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Return_Reason]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      connectionManagerRefId="Package.ConnectionManagers[SRIMANTH\SQLEXPRESS.Customer_Sales]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Return_Reason\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Return reason]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Return reason"
                          cachedSortKeyPosition="1"
                          externalMetadataColumnId="Package\Foreach Loop Container 4\Insert into Return_Reason\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Return_Reason]"
                          lineageId="Package\Foreach Loop Container 4\Insert into Return_Reason\Sort.Outputs[Sort Output].Columns[Return reason]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Return_Reason\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Return_Reason_Id]"
                          dataType="i4"
                          name="Return_Reason_Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 4\Insert into Return_Reason\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Return_Reason]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Return_Reason" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Return_Reason\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Return_Reason\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Return_Reason\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Return_Reason\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 4\Insert into Return_Reason\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::Returns_Source_Row_Count</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Return_Reason\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Row Count 1"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count 1">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::Returns_Destination_Row_Count</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Row Count 1.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Row Count 1.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container 4\Insert into Return_Reason\Row Count 1.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Sort"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Sort.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Sort.Inputs[Sort Input].Columns[Return reason]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Return reason"
                          lineageId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Outputs[Flat File Source Output].Columns[Return reason]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Sort.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 4\Insert into Return_Reason\Sort.Outputs[Sort Output].Columns[Return reason]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container 4\Insert into Return_Reason\Sort.Outputs[Sort Output].Columns[Return reason]"
                          name="Return reason"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Outputs[Flat File Source Output].Columns[Return reason]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Return_Reason.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container 4\Insert into Return_Reason\Row Count.Inputs[Row Count Input 1]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Return_Reason.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container 4\Insert into Return_Reason\Row Count 1.Inputs[Row Count Input 1]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Return_Reason.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container 4\Insert into Return_Reason\Sort.Inputs[Sort Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container 4\Insert into Return_Reason\Row Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Return_Reason.Paths[Row Count Output 11]"
                  endId="Package\Foreach Loop Container 4\Insert into Return_Reason\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container 4\Insert into Return_Reason\Row Count 1.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container 4\Insert into Return_Reason.Paths[Sort Output]"
                  endId="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup.Inputs[Lookup Input]"
                  name="Sort Output"
                  startId="Package\Foreach Loop Container 4\Insert into Return_Reason\Sort.Outputs[Sort Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 4\Orders_Processed_to_True"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{735e31f9-c9d2-4aa4-b0b6-36c1c5e2a616}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Orders_Processed_to_True"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::Is_Orders_Processed] = True" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container 4.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{dbc7b62c-fb38-436c-b02e-659d3631bed5}"
          DTS:From="Package\Foreach Loop Container 4\Insert into Orders Table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container 4\Capture Sales Loop" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container 4.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{73b2e749-9c11-41bb-a565-8536e63264f0}"
          DTS:EvalOp="3"
          DTS:Expression="FINDSTRING( @[User::Orders_Return_Files_Names_Loop], &quot;Sales&quot;, 1) &gt; 0"
          DTS:From="Package\Foreach Loop Container 4\Expression Task 1"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container 4\Insert into Orders Table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container 4.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{c23e2d6e-6cc3-4d6d-a62c-97b0a2b0a586}"
          DTS:EvalOp="3"
          DTS:Expression="(@[User::Orders_Return_Files_Names_Loop] == &quot;C:\\Users\\polam\\Documents\\SSIS Assignment\\Data_Files\\Returns.csv&quot;) &amp;&amp; ( @[User::Is_Orders_Processed] == True  )"
          DTS:From="Package\Foreach Loop Container 4\Expression Task 1"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container 4\Insert into Return_Reason" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container 4.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{d8e407e0-c71c-4d6f-9fff-babbf136fcba}"
          DTS:From="Package\Foreach Loop Container 4\Insert into Returns"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container 4\Expression Task 2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container 4.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{6e2811ec-c285-4fec-b8bf-5aec1e6f8f51}"
          DTS:From="Package\Foreach Loop Container 4\Insert into Return_Reason"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Foreach Loop Container 4\Insert into Returns" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container 4.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{6756ebdd-9c60-4e77-98e7-ef3655f38269}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::v_Sales_Count_Loop] ==  @[User::Sales_Files_Total_Count]"
          DTS:From="Package\Foreach Loop Container 4\Capture Sales Loop"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Foreach Loop Container 4\Orders_Processed_to_True" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{6a2a7d89-6cc1-41a0-96cc-eefb3b31a852}"
          DTS:ObjectName="{1CE6C8AC-5885-45F5-A45C-D5B2EAE15E65}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::Orders_Return_Files_Names_Loop" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{FE756F4D-3894-4A6E-BD74-DB267144473D}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_ef23ec078dcf47178e56ad6528eb76c1"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::FilePath"
          ReadWriteVariables="User::File_Names_List">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ef23ec078dcf47178e56ad6528eb76c1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ef23ec078dcf47178e56ad6528eb76c1")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_ef23ec078dcf47178e56ad6528eb76c1.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2B2E4419-FDFA-43FC-BE90-642546AA970F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_ef23ec078dcf47178e56ad6528eb76c1</RootNamespace>
    <AssemblyName>ST_ef23ec078dcf47178e56ad6528eb76c1</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
using System.Linq;
#endregion

namespace ST_ef23ec078dcf47178e56ad6528eb76c1
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            string sourceFolder = Dts.Variables["User::FilePath"].Value.ToString();
            List<string> fileList = Directory.GetFiles(sourceFolder, "*.csv").ToList();

            List<string> filesToProcess = new List<string>();

            //bool skipFile = false;

            string[] excludedFiles = new string[]
            {
                "Returns.csv",
                "Sales_File_1.csv",
                "Sales_File_2.csv",
                "Sales_File_3.csv",
                "Sales_Finance.csv",
                "Date.xlsx"
            };

            foreach (string file in fileList)
            {
                string fileName = Path.GetFileName(file);
                
                bool skipFile = excludedFiles.Any(excludedFile =>
                    fileName.Equals(excludedFile, StringComparison.OrdinalIgnoreCase));

                if (!skipFile)
                {
                    filesToProcess.Add(file); // Add the file to the list if it's not excluded
                }
            }

            filesToProcess = filesToProcess.OrderBy(file =>
            {
                if (file.EndsWith("Region.csv", StringComparison.OrdinalIgnoreCase))
                    return 1;
                if (file.EndsWith("Customer_details.csv", StringComparison.OrdinalIgnoreCase))
                    return 2;
                if (file.EndsWith("Customer_details_2.csv", StringComparison.OrdinalIgnoreCase))
                    return 3;
                if (file.EndsWith("Product.csv", StringComparison.OrdinalIgnoreCase))
                    return 4;
                if (file.EndsWith("Product_1.csv", StringComparison.OrdinalIgnoreCase))
                    return 5;
                if (file.EndsWith("Shipping_mode.csv", StringComparison.OrdinalIgnoreCase))
                    return 6;
                return 7; // other files
            }).ToList();


            string fileListString = string.Join("\n", filesToProcess);
            MessageBox.Show(fileListString, "File List");

            Dts.Variables["User::File_Names_List"].Value = filesToProcess.ToArray();


            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_ef23ec078dcf47178e56ad6528eb76c1</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_ef23ec078dcf47178e56ad6528eb76c1</msb:DisplayName>
    <msb:ProjectId>{D8CB5597-3799-42D1-8D4E-B4A6641D95AD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_ef23ec078dcf47178e56ad6528eb76c1.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ef23ec078dcf47178e56ad6528eb76c1.Properties.Settings.get_Default():ST_ef23ec078dcf47178e56ad6528eb76c1.Properties.Sett" +
    "ings")]

namespace ST_ef23ec078dcf47178e56ad6528eb76c1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ef23ec078dcf47178e56ad6528eb76c1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ef23ec078dcf47178e56ad6528eb76c1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ef23ec078dcf47178e56ad6528eb76c1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ef23ec078dcf47178e56ad6528eb76c1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ef23ec078dcf47178e56ad6528eb76c1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_ef23ec078dcf47178e56ad6528eb76c1.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEKwrGYAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAIjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANA0AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAKBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAE
NQAAAAAAAEgAAAACAAUAmCIAAIARAAABAAAAAAAAABg0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBAA3AQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAApyHwAAcCgVAAAKKAEAACsKcxcAAAoLHI0hAAABJRZyKwAAcKIlF3JDAABwoiUYcmUA
AHCiJRlyhwAAcKIlGnKpAABwoiUbcs0AAHCiDAZvGAAACg0rOxIDKBkAAAoTBHMNAAAGEwURBREE
KBoAAAp9CQAABAgRBf4GDgAABnMbAAAKKAIAACstCAcRBG8dAAAKEgMoHgAACi283g4SA/4WAgAA
G28fAAAK3Ad+CAAABCUtFyZ+BwAABP4GDAAABnMgAAAKJYAIAAAEKAMAACsoAQAAKwty4QAAcAco
IgAACnLlAABwKCMAAAomAigQAAAKbxEAAApy+QAAcG8SAAAKB28kAAAKbyUAAAoCKBAAAAoWbyYA
AAoqAAEQAAACAHMASLsADgAAAAAeAignAAAKKh4CKCgAAAoqrn4BAAAELR5yJQEAcNADAAACKCkA
AApvKgAACnMrAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoLAAACioucwgA
AAaAAwAABCoucwsAAAaABwAABCoAABMwAwBiAAAAAAAAAANylwEAcBtvLQAACiwCFyoDcq0BAHAb
by0AAAosAhgqA3LXAQBwG28tAAAKLAIZKgNyBQIAcBtvLQAACiwCGioDch0CAHAbby0AAAosAhsq
A3I5AgBwG28tAAAKLAIcKh0qOgJ7CQAABAMbby4AAAoqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAVAUAACN+AADABQAADAcAACNTdHJpbmdzAAAAAMwMAABgAgAAI1VTACwP
AAAQAAAAI0dVSUQAAAA8DwAARAIAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQsAAAD6ATMAFgAAAQAA
ACoAAAAHAAAACQAAAA4AAAADAAAALgAAAAIAAAASAAAAAQAAAAIAAAADAAAABAAAAAQAAAABAAAA
BgAAAAEAAAADAAAAAwAAAAAAdwQBAAAAAAAGAA8DdwUGAJ4DdwUGAFsCZAUPAOsFAAAGAIgC+gQG
APIC+gQGANMC+gQGAIUD+gQGAC8D+gQGAEgD+gQGAJ8C+gQGALoC1gMKAGMDJgQKANIBJgQGAFoA
1wA/AEwFAAAGAK8EqAQGACMCdwUGAIMGqAQGAIUAqAQGAD4CZAUGADkFlwUGAB0F5QQOAA4CYQQO
AG8CYQQOAO4B0AQKAE8EJgQSAC0GcQESAAYBcQEGAP8GmQAWAA8BKQUGADcA1wAGAPIDqAQGAPkD
mQAGABoBqAQWAEUAKQUaANMGUAYaAJYGUAYGAJEBqAQGACYBqAQGAPIG+gQGAAwFqAQAAAAAkAAA
AAAAAQABAAEAEADABGEAOQABAAEAAAAQAJ4F+gVNAAEAAwAAARAAQAb6BWkAAwAHAAMBAAB1BgAA
RQAEAAoAAyEQANMAAABNAAcACgADARAAFwAAAE0ACQANABEAtAQuAREAwgEyAREA9gA2AQYGwgA6
AVaAZQY9AVaAogE9ATYAjABBARYAAQBFAQYAaAFNAVAgAAAAAIYAxgQGAAEApCEAAAAAhhhXBQYA
AQCsIQAAAACDGFcFBgABALQhAAAAAJMINQVQAQEA4CEAAAAAkwiqAVUBAQDnIQAAAACTCLYBWgEB
AO8hAAAAAJYIigZgAQIA9iEAAAAAhhhXBQYAAgD+IQAAAACRGF0FZQECAAoiAAAAAJEYXQVlAQIA
rCEAAAAAhhhXBQYAAgAYIgAAAACDAAoAaQECAKwhAAAAAIYYVwUGAAMAhiIAAAAAgwAsAG4BAwAA
AAEA0AMAAAEAVwEAAAEASgEJAFcFAQARAFcFBgAZAFcFCgApAFcFEAAxAFcFEAA5AFcFEABBAFcF
EABJAFcFEABRAFcFEABZAFcFEABhAFcFEABpAFcFBgCRAFcFBgCpAFcFBgDJAFcFFQBxAG0GMgDZ
ACkGNwDhAJ8EPADpALwDQgCZAPADRgDxADcGSgD5AL4GUQAMAFcFBgAMAEkFbAAUALIGewARAVwB
gAAcAFcFjAD5APsGkgAMAPIApQAUAMUGqwAZAQYCBgAkAFcFjAD5AN4GtgAJAcsE1QApAc4G4AAM
AOYG6ADpAMYD7gDZAKMGAQBxAFcFBgCZAFcFBgA5ATgB8wA5Ae4G/ACxAFcFAgHRAFcFBgAJAf4D
CgEJAUkGCgEIABQAJAEIABgAKQEpAHsAqgEuAAsAggEuABMAiwEuABsAqgEuACMAswEuACsA3AEu
ADMA3AEuADsA3AEuAEMAswEuAEsA4gEuAFMA3AEuAFsA+QFDAGMAKQFJAHsAqgFhAGsAKQFjAHMA
KQHDAGsAKQHjAGsAKQEbAAMAAQAEAAMAAAA5BXMBAADKAXgBAACOBn0BAgAEAAMAAgAFAAUAAQAG
AAUAAgAHAAcAZgB1AIUArwAEgAAAAQAAABQjDW4AAAAAAABhAAAABAAAAAAAAAAAAAAAEgHKAAAA
AAAQAAAAAAAAAAAAAAAbAQcEAAAAAAQAAAAAAAAAAAAAABIBqAQAAAAAEAAAAAAAAAAAAAAAGwGj
AAAAAAAEAAAAAAAAAAAAAAASAZYBAAAAAAQAAAAAAAAAAAAAABIBUAYAAAAAAAAAAAEAAACoBQAA
BQACAAYAAgAHAAIALQBiADkAYgBDANAAAAAAPD45X18wXzAAPE1haW4+Yl9fMF8wADw+Y19fRGlz
cGxheUNsYXNzMF8wADxNYWluPmJfXzEASUVudW1lcmFibGVgMQBJT3JkZXJlZEVudW1lcmFibGVg
MQBMaXN0YDEAU1RfZWYyM2VjMDc4ZGNmNDcxNzhlNTZhZDY1MjhlYjc2YzEARnVuY2AyADw+OQA8
TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18A
bXNjb3JsaWIAPD5jAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAEFkZABkZWZhdWx0SW5zdGFu
Y2UAVmFyaWFibGUARW51bWVyYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRU
eXBlRnJvbUhhbmRsZQBleGNsdWRlZEZpbGUAZmlsZQBHZXRGaWxlTmFtZQBmaWxlTmFtZQBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUAU3lzdGVtLkNvcmUARmFpbHVyZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9k
ZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0
ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0
dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlv
bkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVj
dEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5
UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmls
aXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBUb1N0cmluZwBQYXRoAEVuZHNXaXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVj
dE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9lZjIzZWMwNzhkY2Y0NzE3OGU1NmFkNjUy
OGViNzZjMS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBK
b2luAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZs
ZWN0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AU3lzdGVtLkxpbnEAZ2V0X1Jlc291
cmNlTWFuYWdlcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2VmMjNl
YzA3OGRjZjQ3MTc4ZTU2YWQ2NTI4ZWI3NmMxLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNl
cwBEZWJ1Z2dpbmdNb2RlcwBTVF9lZjIzZWMwNzhkY2Y0NzE3OGU1NmFkNjUyOGViNzZjMS5Qcm9w
ZXJ0aWVzAGdldF9WYXJpYWJsZXMAR2V0RmlsZXMAU2V0dGluZ3MARXF1YWxzAFN5c3RlbS5XaW5k
b3dzLkZvcm1zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABnZXRfRGVmYXVs
dABEaWFsb2dSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0N1cnJlbnQAVG9MaXN0AE1vdmVOZXh0
AFNob3cATWVzc2FnZUJveABPcmRlckJ5AFRvQXJyYXkAZ2V0X0Fzc2VtYmx5AEFueQBEaXJlY3Rv
cnkAAAAAAB1VAHMAZQByADoAOgBGAGkAbABlAFAAYQB0AGgAAAsqAC4AYwBzAHYAABdSAGUAdAB1
AHIAbgBzAC4AYwBzAHYAACFTAGEAbABlAHMAXwBGAGkAbABlAF8AMQAuAGMAcwB2AAAhUwBhAGwA
ZQBzAF8ARgBpAGwAZQBfADIALgBjAHMAdgAAIVMAYQBsAGUAcwBfAEYAaQBsAGUAXwAzAC4AYwBz
AHYAACNTAGEAbABlAHMAXwBGAGkAbgBhAG4AYwBlAC4AYwBzAHYAABNEAGEAdABlAC4AeABsAHMA
eAAAAwoAABNGAGkAbABlACAATABpAHMAdAAAK1UAcwBlAHIAOgA6AEYAaQBsAGUAXwBOAGEAbQBl
AHMAXwBMAGkAcwB0AABxUwBUAF8AZQBmADIAMwBlAGMAMAA3ADgAZABjAGYANAA3ADEANwA4AGUA
NQA2AGEAZAA2ADUAMgA4AGUAYgA3ADYAYwAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBz
AG8AdQByAGMAZQBzAAAVUgBlAGcAaQBvAG4ALgBjAHMAdgAAKUMAdQBzAHQAbwBtAGUAcgBfAGQA
ZQB0AGEAaQBsAHMALgBjAHMAdgAALUMAdQBzAHQAbwBtAGUAcgBfAGQAZQB0AGEAaQBsAHMAXwAy
AC4AYwBzAHYAABdQAHIAbwBkAHUAYwB0AC4AYwBzAHYAABtQAHIAbwBkAHUAYwB0AF8AMQAuAGMA
cwB2AAAjUwBoAGkAcABwAGkAbgBnAF8AbQBvAGQAZQAuAGMAcwB2AAAAAAAU65Z9fN2TTb+1PWED
KBGQAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFhFgcGFRI9AQ4VEj0BDh0OFRFBAQ4OEhwEIAAS
bQQgABJxBSABEnUcAyAAHAMgAA4GAAIdDg4OEBABARUSPQEeABUSgIEBHgADCgEOBRUSPQEOCCAA
FRFBARMABRURQQEOBCAAEwAEAAEODgYVElECDgIFIAIBHBgSEAECAhUSgIEBHgAVElECHgACBSAB
ARMAAyAAAgYVElECDggZEAICFRKAkQEeABUSgIEBHgAVElECHgAeAQQKAg4ICgACDg4VEoCBAQ4H
AAIRgJkODgUgAB0TAAQgAQEcCAABEoCdEYChBSAAEoClByACAQ4SgKUHIAICDhGAqQi3elxWGTTg
iQiJhF3NgIDMkQQAAAAABAEAAAADBhJZAwYSXQMGEhACBggDBhEUAwYSGAcGFRJRAg4IAgYOBAAA
ElkEAAASXQUAAQESXQQAABIQAwAAAQQgAQgOBCABAg4ECAASWQQIABJdBAgAEhAIAQAIAAAAAAAe
AQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2VmMjNlYzA3OGRj
ZjQ3MTc4ZTU2YWQ2NTI4ZWI3NmMxAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjQAAEkBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBG
cmFtZXdvcmsgNC43ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAD4NAAAAAAAAAAAAAASNQAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAABDUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQANbhQjAAABAA1uFCM/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGUAZgAyADMAZQBjADAANwA4AGQAYwBmADQANwAxADcAOABlADUANgBhAGQANgA1ADIA
OABlAGIANwA2AGMAMQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4
ADkAOAAwAC4AMgA4ADEANwAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGUAZgAyADMAZQBjADAANwA4AGQAYwBmADQANwAxADcAOABlADUANgBhAGQANgA1ADIAOABl
AGIANwA2AGMAMQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AZQBmADIAMwBlAGMAMAA3ADgAZABjAGYANAA3ADEANwA4AGUANQA2AGEAZAA2
ADUAMgA4AGUAYgA3ADYAYwAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGUAZgAyADMAZQBjADAANwA4AGQAYwBmADQANwAxADcAOABlADUANgBhAGQANgA1
ADIAOABlAGIANwA2AGMAMQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOAA5ADgAMAAuADIAOAAxADcAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOAA5ADgAMAAuADIAOAAxADcAMwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAkNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task 1"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{26eee993-1a07-44d5-8c34-9f7f56a7f14c}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task 1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7a74078d1f5c409096ada7519f82b508"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::File_Name_Loop"
          ReadWriteVariables="User::Skip_Files,User::Variable">
          <ProjectItem
            Name="ST_7a74078d1f5c409096ada7519f82b508.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{224B4435-0053-4067-9536-D52274EE0F9F}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_48b0e467f1d54a8eb656692debbec02b</RootNamespace><AssemblyName>ST_7a74078d1f5c409096ada7519f82b508</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST160</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_48b0e467f1d54a8eb656692debbec02b.Properties.Settings.get_Default():ST_48b0e467f1d54a8eb656692debbec02b.Properties.Sett" +
    "ings")]

namespace ST_48b0e467f1d54a8eb656692debbec02b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_48b0e467f1d54a8eb656692debbec02b
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string fileName = Dts.Variables["User::File_Name_Loop"].Value.ToString();

            // Initialize a boolean to decide whether to skip the file
            bool skipFile = false;
            int fileOrder = 0;
            // List of files to be skipped
            string[] excludedFiles = new string[]
            {
                "Returns.csv",
                "Sales_File_1.csv",
                "Sales_File_2.csv",
                "Sales_File_3.csv",
                "Sales_Finance.csv",
                "Date.xlsx"
            };

            foreach (string excludedFile in excludedFiles)
            {
                if (fileName.Equals(excludedFile, StringComparison.OrdinalIgnoreCase))
                {
                    skipFile = true;
                    break;
                }
                //else
                //{
                //    skipFile = false;
                //    //fileOrder = 0;
                //}
            }

            Dts.Variables["User::Skip_Files"].Value = skipFile;
            Dts.Variables["User::Variable"].Value = fileOrder;
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_48b0e467f1d54a8eb656692debbec02b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_48b0e467f1d54a8eb656692debbec02b</msb:DisplayName>
    <msb:ProjectId>{69978F10-3EB9-4DCA-935A-A24303909530}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_7a74078d1f5c409096ada7519f82b508.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_48b0e467f1d54a8eb656692debbec02b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_48b0e467f1d54a8eb656692debbec02b")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_48b0e467f1d54a8eb656692debbec02b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_48b0e467f1d54a8eb656692debbec02b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_48b0e467f1d54a8eb656692debbec02b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_48b0e467f1d54a8eb656692debbec02b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_48b0e467f1d54a8eb656692debbec02b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_48b0e467f1d54a8eb656692debbec02b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANqVq2YAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAki8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEAvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAmA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB0
LwAAAAAAAEgAAAACAAUAlCEAAPQMAAABAAAAAAAAAIguAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBADPAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKFgsWDByNGwAAASUWcisAAHCiJRdyQwAAcKIlGHJlAABwoiUZcocAAHCiJRpyqQAA
cKIlG3LNAABwog0WEwQrGwkRBJoTBQYRBRtvFQAACiwEFwsrDREEF1gTBBEECY5pMt4CKBAAAApv
EQAACnLhAABwbxIAAAoHjB0AAAFvFgAACgIoEAAACm8RAAAKcgMBAHBvEgAACgiMHgAAAW8WAAAK
AigQAAAKFm8XAAAKKh4CKBgAAAoqHgIoGQAACiqufgEAAAQtHnIhAQBw0AMAAAIoGgAACm8bAAAK
cxwAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigdAAAKKi5zCAAABoADAAAE
KgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAOADAAAjfgAATAQAAIwFAAAj
U3RyaW5ncwAAAADYCQAAlAEAACNVUwBsCwAAEAAAACNHVUlEAAAAfAsAAHgBAAAjQmxvYgAAAAAA
AAACAAABVx2iAQkDAAAA+gEzABYAAAEAAAAhAAAABQAAAAYAAAAJAAAAAQAAAB0AAAACAAAAEAAA
AAEAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAACFAwEAAAAAAAYAKwJuBAYAugJuBAYA
dwFbBA8A4gQAAAYApAELBAYADgILBAYA7wELBAYAoQILBAYASwILBAYAZAILBAYAuwELBAYA1gHy
AgoAfwI0AwoA9gA0AwYAvQO2AwYAWgFbBAYAXAW2AwYAPgSOBAYALgT2Aw4AKgFvAw4AiwFvAw4A
EgHhAwYAPwFuBAoAXQM0AxIAJAWhABIAdAChAAYADgO2AwYAHQS2AwYAzgO2AwYAAQC2AwYAwQC2
AwYAfQC2AwYAggULBAAAAAAHAAAAAAABAAEAAQAQANYDNwA5AAEAAQAAABAAlQTxBEUAAQADAAAB
EAAuBfEEWQADAAcAAwEAAE4FAAA9AAQACgARAMIDewARAOYAfwARAGQAgwAGBi8AhwBWgD4FigBW
gMYAigBQIAAAAACGANwDBgABACshAAAAAIYYTgQGAAEAMyEAAAAAgxhOBAYAAQA7IQAAAACTCDoE
jgABAGchAAAAAJMIzgCTAAEAbiEAAAAAkwjaAJgAAQB2IQAAAACWCGMFngACAH0hAAAAAIYYTgQG
AAIAhSEAAAAAkRhUBKMAAgAAAAEA7AIJAE4EAQARAE4EBgAZAE4ECgApAE4EEAAxAE4EEAA5AE4E
EABBAE4EEABJAE4EEABRAE4EEABZAE4EEABhAE4EEABpAE4EBgCBAE4EBgCpAE4EFQC5AE4EBgBx
AEYFJQDBACAFKgDJAK0DLwDRANgCNQCJAAwDOQDZADcFPQDRAOICRADBAG8FAQBxAE4EBgCJAE4E
BgD5AI8ASQD5AH4FUQCRAE4EVwCxAE4EBgAIABQAcQAIABgAdgApAHMA3gAuAAsAtgAuABMAvwAu
ABsA3gAuACMA5wAuACsAEAEuADMAEAEuADsAEAEuAEMA5wAuAEsAFgEuAFMAEAEuAFsALQFDAGMA
dgBJAHMA3gBhAHsAdgBjAGsAdgAbAAMAAQAEAAMAAAA+BKcAAADuAKwAAABnBbEAAgAEAAMAAgAF
AAUAAQAGAAUAAgAHAAcABIAAAAEAAAATI5mJAAAAAAAANwAAAAQAAAAAAAAAAAAAAF8AWwAAAAAA
EAAAAAAAAAAAAAAAaAAVAwAAAAAEAAAAAAAAAAAAAABfALYDAAAAABAAAAAAAAAAAAAAAGgAEAAA
AAAAAAAAAAEAAACfBAAABQACAAAAAEludDMyADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
TWFuYWdlZERUUwB2YWx1ZV9fAFNUXzQ4YjBlNDY3ZjFkNTRhOGViNjU2NjkyZGViYmVjMDJiAG1z
Y29ybGliAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0
TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25p
bmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAFNUXzQ4YjBlNDY3ZjFkNTRhOGViNjU2NjkyZGViYmVjMDJiLmRsbABnZXRfSXRl
bQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBCb29sZWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZp
Z3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3RyaW5nQ29t
cGFyaXNvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0
ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVz
b3VyY2VzAFNUXzQ4YjBlNDY3ZjFkNTRhOGViNjU2NjkyZGViYmVjMDJiLlByb3BlcnRpZXMuUmVz
b3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF80OGIwZTQ2N2YxZDU0YThlYjY1NjY5
MmRlYmJlYzAyYi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MARXF1YWxzAFN1Y2Nl
c3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3Vs
dABnZXRfQXNzZW1ibHkAAAApVQBzAGUAcgA6ADoARgBpAGwAZQBfAE4AYQBtAGUAXwBMAG8AbwBw
AAAXUgBlAHQAdQByAG4AcwAuAGMAcwB2AAAhUwBhAGwAZQBzAF8ARgBpAGwAZQBfADEALgBjAHMA
dgAAIVMAYQBsAGUAcwBfAEYAaQBsAGUAXwAyAC4AYwBzAHYAACFTAGEAbABlAHMAXwBGAGkAbABl
AF8AMwAuAGMAcwB2AAAjUwBhAGwAZQBzAF8ARgBpAG4AYQBuAGMAZQAuAGMAcwB2AAATRABhAHQA
ZQAuAHgAbABzAHgAACFVAHMAZQByADoAOgBTAGsAaQBwAF8ARgBpAGwAZQBzAAAdVQBzAGUAcgA6
ADoAVgBhAHIAaQBhAGIAbABlAABxUwBUAF8ANAA4AGIAMABlADQANgA3AGYAMQBkADUANABhADgA
ZQBiADYANQA2ADYAOQAyAGQAZQBiAGIAZQBjADAAMgBiAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAABwmXBkYJZ0ysfhFuNKqrogAEIAEBCAMgAAEFIAEBEREEIAEB
DgUgAQERUQkHBg4CCB0OCA4EIAASYQQgABJlBSABEmkcAyAAHAMgAA4GIAICDhFxBCABARwHAAES
fRGAgQUgABKAhQcgAgEOEoCFCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYS
EAIGCAMGERQEAAASSQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAA
HgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF80OGIwZTQ2N2Yx
ZDU0YThlYjY1NjY5MmRlYmJlYzAyYgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0AABJAQAa
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQg
RnJhbWV3b3JrIDQuNwC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAaC8AAAAAAAAAAAAAgi8AAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAHQvAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCZiRMjAAABAJmJEyM/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADQAOABiADAAZQA0ADYANwBmADEAZAA1ADQAYQA4AGUAYgA2ADUANgA2ADkAMgBk
AGUAYgBiAGUAYwAwADIAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA4ADkANwA5AC4AMwA1ADIAMgA1AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADQAOABiADAAZQA0ADYANwBmADEAZAA1ADQAYQA4AGUAYgA2ADUANgA2ADkAMgBkAGUA
YgBiAGUAYwAwADIAYgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANAA4AGIAMABlADQANgA3AGYAMQBkADUANABhADgAZQBiADYANQA2ADYA
OQAyAGQAZQBiAGIAZQBjADAAMgBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADQAOABiADAAZQA0ADYANwBmADEAZAA1ADQAYQA4AGUAYgA2ADUANgA2ADkA
MgBkAGUAYgBiAGUAYwAwADIAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOAA5ADcAOQAuADMANQAyADIANQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA5ADcAOQAuADMANQAyADIANQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACUPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task 2"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{fd69b312-0fa3-4b88-b7dd-1c037184fb11}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task 2"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d263fa5c2dde44efa6a7094e3ed41477"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::File_Name_Loop,User::FilePath"
          ReadWriteVariables="User::Is_Region_Processed,User::Variable">
          <ProjectItem
            Name="ST_d263fa5c2dde44efa6a7094e3ed41477.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{536BDE7A-DA63-40CF-AFBA-218923476FD0}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_e8eb18be5e2d4e989f95eef1b957913b</RootNamespace><AssemblyName>ST_d263fa5c2dde44efa6a7094e3ed41477</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST160</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8eb18be5e2d4e989f95eef1b957913b.Properties.Settings.get_Default():ST_e8eb18be5e2d4e989f95eef1b957913b.Properties.Sett" +
    "ings")]

namespace ST_e8eb18be5e2d4e989f95eef1b957913b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text.RegularExpressions;
#endregion

namespace ST_e8eb18be5e2d4e989f95eef1b957913b
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string fileName = Dts.Variables["User::File_Name_Loop"].Value.ToString();
            int fileOrder = 0;

            Regex customerPattern = new Regex(@"customer_details\.csv", RegexOptions.IgnoreCase);
            Regex customer2Pattern = new Regex(@"customer_details_2\.csv", RegexOptions.IgnoreCase);
            Regex productPattern = new Regex(@"product\.csv", RegexOptions.IgnoreCase);
            Regex product1Pattern = new Regex(@"product_1\.csv", RegexOptions.IgnoreCase);
            Regex regionPattern = new Regex(@"region\.csv", RegexOptions.IgnoreCase);
            Regex shippingModePattern = new Regex(@"shipping_mode\.csv", RegexOptions.IgnoreCase);

            if (regionPattern.IsMatch(fileName))
            {
                // Customer_details.csv is processed first
                fileOrder = 1;
                Dts.Variables["User::Is_Region_Processed"].Value = true;
            }
            else if (customerPattern.IsMatch(fileName))
            {
                // Handle Region.csv
                fileOrder = 2;
            }
            else if (customer2Pattern.IsMatch(fileName))
            {
                // Customer_details_2.csv is processed second
                fileOrder = 3;
            }
            else if (productPattern.IsMatch(fileName))
            {
                // General Product.csv handling
                fileOrder = 4;
            }
            else if (product1Pattern.IsMatch(fileName))
            {
                // Specific Product_1.csv handling
                fileOrder = 5;
            }
            else if (shippingModePattern.IsMatch(fileName))
            {
                // Handle Shipping_mode.csv
                fileOrder = 6;
            }

            Dts.Variables["User::Variable"].Value = fileOrder;

            //Dts.Events.FireInformation(0, "File Order Assignment",
            //$"File: {fileName} assigned to order {fileOrder}",
            //string.Empty, 0, ref fireAgain);


            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion
        

        

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_e8eb18be5e2d4e989f95eef1b957913b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_e8eb18be5e2d4e989f95eef1b957913b</msb:DisplayName>
    <msb:ProjectId>{B079ABE8-213E-4A88-9FBA-2ECB24A6B0C2}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_d263fa5c2dde44efa6a7094e3ed41477.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e8eb18be5e2d4e989f95eef1b957913b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e8eb18be5e2d4e989f95eef1b957913b")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8eb18be5e2d4e989f95eef1b957913b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8eb18be5e2d4e989f95eef1b957913b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8eb18be5e2d4e989f95eef1b957913b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e8eb18be5e2d4e989f95eef1b957913b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e8eb18be5e2d4e989f95eef1b957913b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_e8eb18be5e2d4e989f95eef1b957913b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIuhq2YAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAMjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOAvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAOBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAU
MAAAAAAAAEgAAAACAAUAzCEAAFwNAAABAAAAAAAAACgvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwAHAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKFgtyKwAAcBdzFQAACgxyVwAAcBdzFQAACg1yhwAAcBdzFQAAChMEcqEAAHAXcxUA
AAoTBXK/AABwF3MVAAAKctcAAHAXcxUAAAoTBgZvFgAACiwkFwsCKBAAAApvEQAACnL9AABwbxIA
AAoXjB0AAAFvFwAACitCCAZvFgAACiwEGAsrNQkGbxYAAAosBBkLKygRBAZvFgAACiwEGgsrGhEF
Bm8WAAAKLAQbCysMEQYGbxYAAAosAhwLAigQAAAKbxEAAApyMQEAcG8SAAAKB4weAAABbxcAAAoC
KBAAAAoWbxgAAAoqHgIoGQAACioeAigaAAAKKq5+AQAABC0eck8BAHDQAwAAAigbAAAKbxwAAApz
HQAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKB4AAAoqLnMIAAAGgAMAAAQq
AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA6AMAACN+AABUBAAAsAUAACNT
dHJpbmdzAAAAAAQKAADEAQAAI1VTAMgLAAAQAAAAI0dVSUQAAADYCwAAhAEAACNCbG9iAAAAAAAA
AAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACEAAAAFAAAABgAAAAkAAAABAAAAHgAAAAIAAAAQAAAA
AQAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAI0DAQAAAAAABgArAmUEBgC6AmUEBgB3
AVIEDwDZBAAABgCkARMEBgAOAhMEBgDvARMEBgChAhMEBgBLAhMEBgBkAhMEBgC7ARMEBgDWAfIC
CgB/AjwDCgD2ADwDDgCaBS4FBgDFA74DBgBaAVIEBgB4Bb4DBgA1BIUEBgAlBP4DDgAqAXcDDgCL
AXcDDgASAekDBgA/AWUECgBlAzwDEgAbBaEAEgB0AKEADgBNBS4FBgDWA74DBgABAL4DBgDBAL4D
BgB9AL4DBgCkBRMEAAAAAAcAAAAAAAEAAQABABAA3gM3ADkAAQABAAAAEACMBOgESQABAAMAAAEQ
ACUF6ARdAAMABwADAQAAagUAAEEABAAKABEAygOFABEA5gCJABEAZACNAAYGLwCRAFaAWgWUAFaA
xgCUAFAgAAAAAIYA5AMGAAEAYyEAAAAAhhhFBAYAAQBrIQAAAACDGEUEBgABAHMhAAAAAJMIMQSY
AAEAnyEAAAAAkwjOAJ0AAQCmIQAAAACTCNoAogABAK4hAAAAAJYIfwWoAAIAtSEAAAAAhhhFBAYA
AgC9IQAAAACRGEsErQACAAAAAQDsAgkARQQBABEARQQGABkARQQKACkARQQQADEARQQQADkARQQQ
AEEARQQQAEkARQQQAFEARQQQAFkARQQQAGEARQQQAGkARQQGAIkARQQGALEARQQVAMEARQQGAHEA
YgUqAMkAFwUvANEAtQM0ANkA2AI6AJEADAM+AHkARQRCAHkAFQNJANkA4gJOAMkAiwUBAHEARQQG
AJEARQQGAPkAjwBTAPkAoAVbAJkARQRhALkARQQGAAgAFAB7AAgAGACAACkAcwDoAC4ACwDAAC4A
EwDJAC4AGwDoAC4AIwDxAC4AKwAaAS4AMwAaAS4AOwAaAS4AQwDxAC4ASwAgAS4AUwAaAS4AWwA3
AUMAYwCAAEkAcwDoAGEAewCAAGMAawCAABsAAwABAAQAAwAAADUEsQAAAO4AtgAAAIMFuwACAAQA
AwACAAUABQABAAYABQACAAcABwAEgAAAAQAAABMjcY8AAAAAAAA3AAAABAAAAAAAAAAAAAAAaQBb
AAAAAAAQAAAAAAAAAAAAAAByAB0DAAAAAAQAAAAAAAAAAAAAAGkAvgMAAAAAEAAAAAAAAAAAAAAA
cgAQAAAAAAAAAAAAAQAAAJYEAAAFAAIAAAAAAABJbnQzMgA8TW9kdWxlPgBNaWNyb3NvZnQuU3Fs
U2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTVF9lOGViMThiZTVlMmQ0ZTk4OWY5NWVlZjFiOTU3
OTEzYgBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZh
aWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlw
dE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVT
dGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmli
dXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50
cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGli
aWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5W
ZXJzaW9uaW5nAFRvU3RyaW5nAElzTWF0Y2gATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNr
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9k
ZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2U4ZWIxOGJlNWUyZDRlOTg5Zjk1ZWVmMWI5NTc5
MTNiLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBCb29sZWFuAFNjcmlwdE1h
aW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxl
Y3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTVF9lOGViMThiZTVlMmQ0ZTk4OWY5NWVlZjFiOTU3OTEzYi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZThlYjE4YmU1ZTJkNGU5ODlmOTVlZWYx
Yjk1NzkxM2IuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN5c3RlbS5UZXh0LlJl
Z3VsYXJFeHByZXNzaW9ucwBSZWdleE9wdGlvbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3Vs
dHMAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFJlZ2V4AGdldF9Bc3NlbWJseQAA
AAAAKVUAcwBlAHIAOgA6AEYAaQBsAGUAXwBOAGEAbQBlAF8ATABvAG8AcAAAK2MAdQBzAHQAbwBt
AGUAcgBfAGQAZQB0AGEAaQBsAHMAXAAuAGMAcwB2AAAvYwB1AHMAdABvAG0AZQByAF8AZABlAHQA
YQBpAGwAcwBfADIAXAAuAGMAcwB2AAAZcAByAG8AZAB1AGMAdABcAC4AYwBzAHYAAB1wAHIAbwBk
AHUAYwB0AF8AMQBcAC4AYwBzAHYAABdyAGUAZwBpAG8AbgBcAC4AYwBzAHYAACVzAGgAaQBwAHAA
aQBuAGcAXwBtAG8AZABlAFwALgBjAHMAdgAAM1UAcwBlAHIAOgA6AEkAcwBfAFIAZQBnAGkAbwBu
AF8AUAByAG8AYwBlAHMAcwBlAGQAAB1VAHMAZQByADoAOgBWAGEAcgBpAGEAYgBsAGUAAHFTAFQA
XwBlADgAZQBiADEAOABiAGUANQBlADIAZAA0AGUAOQA4ADkAZgA5ADUAZQBlAGYAMQBiADkANQA3
ADkAMQAzAGIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAFFS
NHLBOfhIiRvY9+NL8+kABCABAQgDIAABBSABARERBCABAQ4FIAEBEVUOBwcOCBI9Ej0SPRI9Ej0E
IAASZQQgABJpBSABEm0cAyAAHAMgAA4GIAIBDhFxBCABAg4EIAEBHAcAARJ9EYCBBSAAEoCFByAC
AQ4SgIUIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSTQMGElEDBhIQAgYIAwYRFAQAABJN
BAAAElEFAAEBElEEAAASEAMAAAEECAASTQQIABJRBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2U4ZWIxOGJlNWUyZDRlOTg5Zjk1ZWVm
MWI5NTc5MTNiAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjQAAEkBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43
AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nv
cmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3
N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAA
AAAAAABQQURQQURQtAAAAAgwAAAAAAAAAAAAACIwAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU
MAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAHGPEyMAAAEAcY8TIz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AZQA4AGUAYgAxADgAYgBlADUAZQAyAGQANABlADkAOAA5AGYAOQA1AGUAZQBmADEA
YgA5ADUANwA5ADEAMwBiAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADgAOQA3ADkALgAzADYANwAyADEAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AZQA4AGUAYgAxADgAYgBlADUAZQAyAGQANABlADkAOAA5AGYAOQA1AGUAZQBmADEAYgA5
ADUANwA5ADEAMwBiAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwBlADgAZQBiADEAOABiAGUANQBlADIAZAA0AGUAOQA4ADkAZgA5ADUAZQBl
AGYAMQBiADkANQA3ADkAMQAzAGIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AZQA4AGUAYgAxADgAYgBlADUAZQAyAGQANABlADkAOAA5AGYAOQA1AGUAZQBm
ADEAYgA5ADUANwA5ADEAMwBiAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA4ADkANwA5AC4AMwA2ADcAMgAxAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADkANwA5AC4AMwA2ADcAMgAxAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADQwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{7A7F66C5-9AAA-4A6E-A507-C507A8AE98BB}"
      DTS:From="Package\Script Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{059482FD-7510-48AB-BED2-5C11D0C86258}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{9514BFE5-A2A3-4503-9EDE-7A7F6CAC129A}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="155.2,41.6"
          Id="Package\Foreach Loop Container\Expression Task"
          TopLeft="14.3333321950502,5.56666564815566" />
        <NodeLayout
          Size="144.8,41.6"
          Id="Package\Foreach Loop Container\Insert into City"
          TopLeft="8.53332837041846,328.766663279666" />
        <NodeLayout
          Size="163.2,41.6"
          Id="Package\Foreach Loop Container\Insert into Country"
          TopLeft="6.96661671880452,125.199998083512" />
        <NodeLayout
          Size="172,41.6"
          Id="Package\Foreach Loop Container\Insert into Customer"
          TopLeft="188.466655101711,193.399997269909" />
        <NodeLayout
          Size="160,41.6"
          Id="Package\Foreach Loop Container\Insert into Region"
          TopLeft="6.33333328780196,192.307998005165" />
        <NodeLayout
          Size="168,41.6"
          Id="Package\Foreach Loop Container\Insert into Segment"
          TopLeft="190.966654965116,125.199997866551" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\Foreach Loop Container\Insert into State"
          TopLeft="7.166666575604,259.374663996842" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="67.3999988617168,47.1666656481557">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="21.1666178570877,78.0333324353563"
              Start="0,0"
              End="21.1666178570877,70.5333324353563">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.6910880706855" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.6910880706855"
                    Point2="0,31.6910880706855"
                    Point3="4,31.6910880706855" />
                  <mssgle:LineSegment
                    End="17.1666178570877,31.6910880706855" />
                  <mssgle:CubicBezierSegment
                    Point1="17.1666178570877,31.6910880706855"
                    Point2="21.1666178570877,31.6910880706855"
                    Point3="21.1666178570877,35.6910880706855" />
                  <mssgle:LineSegment
                    End="21.1666178570877,70.5333324353563" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="2.58330892854384,36.6910880706855,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="87.4499750033032,166.799998083512">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.5079999216532"
              Start="0,0"
              End="0,18.0079999216532">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.0079999216532" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="84.549999931703,233.907998005165">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.466665991677"
              Start="0,0"
              End="0,17.966665991677">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.966665991677" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="81.8499974730112,300.974663996842">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.7919992828234"
              Start="0,0"
              End="0,20.2919992828234">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2919992828234" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="116.466665528384,47.1666656481557">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="158.499989436733,78.0333322183954"
              Start="0,0"
              End="158.499989436733,70.5333322183954">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.6910879825728" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.6910879825728"
                    Point2="0,31.6910879825728"
                    Point3="4,31.6910879825728" />
                  <mssgle:LineSegment
                    End="154.499989436733,31.6910879825728" />
                  <mssgle:CubicBezierSegment
                    Point1="154.499989436733,31.6910879825728"
                    Point2="158.499989436733,31.6910879825728"
                    Point3="158.499989436733,35.6910879825728" />
                  <mssgle:LineSegment
                    End="158.499989436733,70.5333322183954" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="71.2499947183665,36.6910879825728,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="274.716655033414,166.799997866551">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26.5999994033574"
              Start="0,0"
              End="0,19.0999994033574">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.0999994033574" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="470.4,425.6"
          Size="470.4,468.8"
          Id="Package\Foreach Loop Container"
          TopLeft="8.8333347903357,152.100001392166" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Script Task"
          TopLeft="13.3333326048324,57.4000013921658" />
        <NodeLayout
          Size="139.2,41.6"
          Id="Package\Script Task 1"
          TopLeft="1143.33327086436,200.800002241929" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Script Task 2"
          TopLeft="1119.1666055181,297.000001572967" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="78.5333326048324,99.0000013921658">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="165.500002185503,53.0999999999998"
              Start="0,0"
              End="165.500002185503,45.5999999999998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5499999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.5499999999999"
                    Point2="0,26.5499999999999"
                    Point3="4,26.5499999999999" />
                  <mssgle:LineSegment
                    End="161.500002185503,26.5499999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="161.500002185503,26.5499999999999"
                    Point2="165.500002185503,26.5499999999999"
                    Point3="165.500002185503,30.5499999999999" />
                  <mssgle:LineSegment
                    End="165.500002185503,45.5999999999998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\Foreach Loop Container 4\Capture Sales Loop"
          TopLeft="46.5097069924432,211.396995136317" />
        <NodeLayout
          Size="164,41.6"
          Id="Package\Foreach Loop Container 4\Expression Task 1"
          TopLeft="148.283324750679,19.9833328105177" />
        <NodeLayout
          Size="164,41.6"
          Id="Package\Foreach Loop Container 4\Expression Task 2"
          TopLeft="312.283314915913,280.066664418711" />
        <NodeLayout
          Size="187.2,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Orders Table"
          TopLeft="18.9501111191951,120.616666764601" />
        <NodeLayout
          Size="199.2,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason"
          TopLeft="296.484646433849,122.96666183326" />
        <NodeLayout
          Size="163.2,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Returns"
          TopLeft="318.151311916702,192.833329126704" />
        <NodeLayout
          Size="206.4,41.6"
          Id="Package\Foreach Loop Container 4\Orders_Processed_to_True"
          TopLeft="31.1999978144961,306.799996926386" />
        <EdgeLayout
          Id="Package\Foreach Loop Container 4.PrecedenceConstraints[Constraint]"
          TopLeft="112.550111119195,162.216666764601">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19.1595958732481,49.1803283717161"
              Start="0,0"
              End="19.1595958732481,41.6803283717161">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5901641858581" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5901641858581"
                    Point2="0,24.5901641858581"
                    Point3="4,24.5901641858581" />
                  <mssgle:LineSegment
                    End="15.1595958732481,24.5901641858581" />
                  <mssgle:CubicBezierSegment
                    Point1="15.1595958732481,24.5901641858581"
                    Point2="19.1595958732481,24.5901641858581"
                    Point3="19.1595958732481,28.5901641858581" />
                  <mssgle:LineSegment
                    End="19.1595958732481,41.6803283717161" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4.PrecedenceConstraints[Constraint 1]"
          TopLeft="230.283324750679,61.5833328105177">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-117.733213631484,59.0333339540829"
              Start="0,0"
              End="-117.733213631484,51.5333339540829">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5166669770414" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.5166669770414"
                    Point2="0,29.5166669770414"
                    Point3="-4,29.5166669770414" />
                  <mssgle:LineSegment
                    End="-113.733213631484,29.5166669770414" />
                  <mssgle:CubicBezierSegment
                    Point1="-113.733213631484,29.5166669770414"
                    Point2="-117.733213631484,29.5166669770414"
                    Point3="-117.733213631484,33.5166669770414" />
                  <mssgle:LineSegment
                    End="-117.733213631484,51.5333339540829" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-66.866606815742,34.5166669770414,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4.PrecedenceConstraints[Constraint 2]"
          TopLeft="256.283324750679,61.5833328105177">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="139.80132168317,61.3833290227423"
              Start="0,0"
              End="139.80132168317,53.8833290227423">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.909176994736" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.909176994736"
                    Point2="0,24.909176994736"
                    Point3="4,24.909176994736" />
                  <mssgle:LineSegment
                    End="135.80132168317,24.909176994736" />
                  <mssgle:CubicBezierSegment
                    Point1="135.80132168317,24.909176994736"
                    Point2="139.80132168317,24.909176994736"
                    Point3="139.80132168317,28.909176994736" />
                  <mssgle:LineSegment
                    End="139.80132168317,53.8833290227423" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="61.900660841585,29.909176994736,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4.PrecedenceConstraints[Constraint 3]"
          TopLeft="397.017313416307,234.433329126704">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.6333352920067"
              Start="0,0"
              End="0,38.1333352920067">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.1333352920067" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4.PrecedenceConstraints[Constraint 4]"
          TopLeft="397.917979175275,164.56666183326">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.2666672934436"
              Start="0,0"
              End="0,20.7666672934436">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.7666672934436" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4.PrecedenceConstraints[Constraint 5]"
          TopLeft="133.05485240347,252.996995136317">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53.8030017900693"
              Start="0,0"
              End="0,46.3030017900693">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.3030017900693" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,15.1515008950347,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="580.8,403.2"
          Size="580.8,446.4"
          Id="Package\Foreach Loop Container 4"
          TopLeft="707.499961343906,108.266666136318" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Insert into City">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container\Insert into City\OLE DB Destination"
          TopLeft="188.499999061227,495.49999448657" />
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\Foreach Loop Container\Insert into City\Sort"
          TopLeft="135.499999403954,204.499998375773" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\Foreach Loop Container\Insert into City\Flat File Source"
          TopLeft="65.5,65.5" />
        <NodeLayout
          Size="120.8,41.6"
          Id="Package\Foreach Loop Container\Insert into City\Lookup 1"
          TopLeft="330.499995157123,282.499995872378" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Foreach Loop Container\Insert into City\Lookup"
          TopLeft="182.499997809529,381.499994844198" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into City.Paths[Sort Output]"
          TopLeft="184.299999403954,246.099998375773">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="206.599995753169,36.399997496605"
              Start="0,0"
              End="206.599995753169,28.899997496605">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.1999987483025" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.1999987483025"
                    Point2="0,18.1999987483025"
                    Point3="4,18.1999987483025" />
                  <mssgle:LineSegment
                    End="202.599995753169,18.1999987483025" />
                  <mssgle:CubicBezierSegment
                    Point1="202.599995753169,18.1999987483025"
                    Point2="206.599995753169,18.1999987483025"
                    Point3="206.599995753169,22.1999987483025" />
                  <mssgle:LineSegment
                    End="206.599995753169,28.899997496605" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into City.Paths[Lookup No Match Output]"
          TopLeft="238.899997809529,423.099994844198">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="35.2000012516976,72.3999996423722"
              Start="0,0"
              End="35.2000012516976,64.8999996423722">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.1999998211861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.1999998211861"
                    Point2="0,36.1999998211861"
                    Point3="4,36.1999998211861" />
                  <mssgle:LineSegment
                    End="31.2000012516976,36.1999998211861" />
                  <mssgle:CubicBezierSegment
                    Point1="31.2000012516976,36.1999998211861"
                    Point2="35.2000012516976,36.1999998211861"
                    Point3="35.2000012516976,40.1999998211861" />
                  <mssgle:LineSegment
                    End="35.2000012516976,64.8999996423722" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-38.2063860929012,41.1999998211861,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into City.Paths[Lookup Match Output]"
          TopLeft="390.899995157123,324.099995872378">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-151.999997347594,57.3999989718197"
              Start="0,0"
              End="-151.999997347594,49.8999989718197">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.6999994859099" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.6999994859099"
                    Point2="0,28.6999994859099"
                    Point3="-4,28.6999994859099" />
                  <mssgle:LineSegment
                    End="-147.999997347594,28.6999994859099" />
                  <mssgle:CubicBezierSegment
                    Point1="-147.999997347594,28.6999994859099"
                    Point2="-151.999997347594,28.6999994859099"
                    Point3="-151.999997347594,32.6999994859099" />
                  <mssgle:LineSegment
                    End="-151.999997347594,49.8999989718197" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-124.191385392547,33.6999994859099,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into City.Paths[Flat File Source Output]"
          TopLeft="141.1,107.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="43.1999994039536,97.3999983757735"
              Start="0,0"
              End="43.1999994039536,89.8999983757735">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.6999991878867" />
                  <mssgle:CubicBezierSegment
                    Point1="0,44.6999991878867"
                    Point2="0,48.6999991878867"
                    Point3="4,48.6999991878867" />
                  <mssgle:LineSegment
                    End="39.1999994039536,48.6999991878867" />
                  <mssgle:CubicBezierSegment
                    Point1="39.1999994039536,48.6999991878867"
                    Point2="43.1999994039536,48.6999991878867"
                    Point3="43.1999994039536,52.6999991878867" />
                  <mssgle:LineSegment
                    End="43.1999994039536,89.8999983757735" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Insert into Country">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container\Insert into Country\OLE DB Destination"
          TopLeft="24.5000006109476,397.499995052814" />
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\Foreach Loop Container\Insert into Country\Sort"
          TopLeft="193.999997109175,158.999997630715" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Foreach Loop Container\Insert into Country\Lookup"
          TopLeft="68.4999995082617,263.499996602535" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\Foreach Loop Container\Insert into Country\Flat File Source"
          TopLeft="105.499998509884,53.4999992847443" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Country.Paths[Flat File Source Output]"
          TopLeft="181.099998509884,95.0999992847443">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="61.6999985992909,63.8999983459711"
              Start="0,0"
              End="61.6999985992909,56.3999983459711">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.9499991729855" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.9499991729855"
                    Point2="0,31.9499991729855"
                    Point3="4,31.9499991729855" />
                  <mssgle:LineSegment
                    End="57.6999985992909,31.9499991729855" />
                  <mssgle:CubicBezierSegment
                    Point1="57.6999985992909,31.9499991729855"
                    Point2="61.6999985992909,31.9499991729855"
                    Point3="61.6999985992909,35.9499991729855" />
                  <mssgle:LineSegment
                    End="61.6999985992909,56.3999983459711" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Country.Paths[Sort Output]"
          TopLeft="242.799997109175,200.599997630715">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-117.899997600913,62.8999989718199"
              Start="0,0"
              End="-117.899997600913,55.3999989718199">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.44999948591" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.44999948591"
                    Point2="0,31.44999948591"
                    Point3="-4,31.44999948591" />
                  <mssgle:LineSegment
                    End="-113.899997600913,31.44999948591" />
                  <mssgle:CubicBezierSegment
                    Point1="-113.899997600913,31.44999948591"
                    Point2="-117.899997600913,31.44999948591"
                    Point3="-117.899997600913,35.44999948591" />
                  <mssgle:LineSegment
                    End="-117.899997600913,55.3999989718199" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Country.Paths[Lookup No Match Output]"
          TopLeft="124.899999508262,305.099996602535">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14.7999988973141,92.3999984502792"
              Start="0,0"
              End="-14.7999988973141,84.8999984502792">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.1999992251396" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.1999992251396"
                    Point2="0,46.1999992251396"
                    Point3="-4,46.1999992251396" />
                  <mssgle:LineSegment
                    End="-10.7999988973141,46.1999992251396" />
                  <mssgle:CubicBezierSegment
                    Point1="-10.7999988973141,46.1999992251396"
                    Point2="-14.7999988973141,46.1999992251396"
                    Point3="-14.7999988973141,50.1999992251396" />
                  <mssgle:LineSegment
                    End="-14.7999988973141,84.8999984502792" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-63.2063861674071,51.1999992251396,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container\Insert into Country.EventHandlers[OnPreExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="164.8,41.6"
          Id="{608b1bf9-73f7-44e7-8fc4-7542fa046e2d}"
          TopLeft="189.999997168779,82.9999987632036" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Insert into Customer">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Foreach Loop Container\Insert into Customer\Lookup"
          TopLeft="96.3333400926646,202.96666344179" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container\Insert into Customer\OLE DB Destination"
          TopLeft="209.833335736558,727.99999729236" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container\Insert into Customer\Source_Row_Count"
          TopLeft="275.99999588728,151.999997735024" />
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\Foreach Loop Container\Insert into Customer\Sort"
          TopLeft="498.833330436713,505.333327180809" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\Foreach Loop Container\Insert into Customer\Flat File Source"
          TopLeft="176.999997362495,72.9999989122148" />
        <NodeLayout
          Size="120.8,41.6"
          Id="Package\Foreach Loop Container\Insert into Customer\Lookup 1"
          TopLeft="286.333339265651,409.933329238163" />
        <NodeLayout
          Size="120.8,41.6"
          Id="Package\Foreach Loop Container\Insert into Customer\Lookup 2"
          TopLeft="54.6666639803184,330.079801920707" />
        <NodeLayout
          Size="190.4,41.6"
          Id="Package\Foreach Loop Container\Insert into Customer\Destination_Row_Count"
          TopLeft="55.1666805628268,603.433326028254" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Customer.Paths[Lookup No Match Output]"
          TopLeft="346.733339265651,451.533329238163">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="200.899991171062,53.7999979426456"
              Start="0,0"
              End="200.899991171062,46.2999979426456">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.8999989713228" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.8999989713228"
                    Point2="0,26.8999989713228"
                    Point3="4,26.8999989713228" />
                  <mssgle:LineSegment
                    End="196.899991171062,26.8999989713228" />
                  <mssgle:CubicBezierSegment
                    Point1="196.899991171062,26.8999989713228"
                    Point2="200.899991171062,26.8999989713228"
                    Point3="200.899991171062,30.8999989713228" />
                  <mssgle:LineSegment
                    End="200.899991171062,46.2999979426456" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="44.6436088667808,31.8999989713228,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Customer.Paths[Lookup Match Output1]"
          TopLeft="115.066663980318,371.679801920707">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="231.666675285333,38.2535273174565"
              Start="0,0"
              End="231.666675285333,30.7535273174565">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.1267636587282" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.1267636587282"
                    Point2="0,19.1267636587282"
                    Point3="4,19.1267636587282" />
                  <mssgle:LineSegment
                    End="227.666675285333,19.1267636587282" />
                  <mssgle:CubicBezierSegment
                    Point1="227.666675285333,19.1267636587282"
                    Point2="231.666675285333,19.1267636587282"
                    Point3="231.666675285333,23.1267636587282" />
                  <mssgle:LineSegment
                    End="231.666675285333,30.7535273174565" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="67.6419509239165,24.1267636587282,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Customer.Paths[Lookup Match Output]"
          TopLeft="152.733340092665,244.56666344179">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-56.4666761123462,85.5131384789169"
              Start="0,0"
              End="-56.4666761123462,78.0131384789169">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.6371918051626" />
                  <mssgle:CubicBezierSegment
                    Point1="0,46.6371918051626"
                    Point2="0,50.6371918051626"
                    Point3="-4,50.6371918051626" />
                  <mssgle:LineSegment
                    End="-52.4666761123462,50.6371918051626" />
                  <mssgle:CubicBezierSegment
                    Point1="-52.4666761123462,50.6371918051626"
                    Point2="-56.4666761123462,50.6371918051626"
                    Point3="-56.4666761123462,54.6371918051626" />
                  <mssgle:LineSegment
                    End="-56.4666761123462,78.0131384789169" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-76.4247247749231,55.6371918051626,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Customer.Paths[Flat File Source Output]"
          TopLeft="252.599997362495,114.599998912215">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="108.999998524785,37.3999988228092"
              Start="0,0"
              End="108.999998524785,29.8999988228092">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.6999994114046" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.6999994114046"
                    Point2="0,18.6999994114046"
                    Point3="4,18.6999994114046" />
                  <mssgle:LineSegment
                    End="104.999998524785,18.6999994114046" />
                  <mssgle:CubicBezierSegment
                    Point1="104.999998524785,18.6999994114046"
                    Point2="108.999998524785,18.6999994114046"
                    Point3="108.999998524785,22.6999994114046" />
                  <mssgle:LineSegment
                    End="108.999998524785,29.8999988228092" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Customer.Paths[Sort Output]"
          TopLeft="547.633330436713,546.933327180809">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-397.266649873886,56.4999988474451"
              Start="0,0"
              End="-397.266649873886,48.9999988474451">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.2499994237226" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.2499994237226"
                    Point2="0,28.2499994237226"
                    Point3="-4,28.2499994237226" />
                  <mssgle:LineSegment
                    End="-393.266649873886,28.2499994237226" />
                  <mssgle:CubicBezierSegment
                    Point1="-393.266649873886,28.2499994237226"
                    Point2="-397.266649873886,28.2499994237226"
                    Point3="-397.266649873886,32.2499994237226" />
                  <mssgle:LineSegment
                    End="-397.266649873886,48.9999988474451" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Customer.Paths[Row Count Output 11]"
          TopLeft="150.366680562827,645.033326028254">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="145.066655173731,82.9666712641061"
              Start="0,0"
              End="145.066655173731,75.4666712641061">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.4833356320531" />
                  <mssgle:CubicBezierSegment
                    Point1="0,37.4833356320531"
                    Point2="0,41.4833356320531"
                    Point3="4,41.4833356320531" />
                  <mssgle:LineSegment
                    End="141.066655173731,41.4833356320531" />
                  <mssgle:CubicBezierSegment
                    Point1="141.066655173731,41.4833356320531"
                    Point2="145.066655173731,41.4833356320531"
                    Point3="145.066655173731,45.4833356320531" />
                  <mssgle:LineSegment
                    End="145.066655173731,75.4666712641061" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Customer.Paths[Row Count Output 1]"
          TopLeft="275.99999588728,172.799997735024">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-66.8666557946154,50.966665706766"
              Start="0,0"
              End="-59.3666557946154,50.966665706766">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-29.4333278973077,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-29.4333278973077,0"
                    Point2="-33.4333278973077,0"
                    Point3="-33.4333278973077,4" />
                  <mssgle:LineSegment
                    End="-33.4333278973077,46.966665706766" />
                  <mssgle:CubicBezierSegment
                    Point1="-33.4333278973077,46.966665706766"
                    Point2="-33.4333278973077,50.966665706766"
                    Point3="-37.4333278973077,50.966665706766" />
                  <mssgle:LineSegment
                    End="-59.3666557946154,50.966665706766" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container\Insert into Customer.EventHandlers[OnPreExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="216.8,41.6"
          Id="Package\Foreach Loop Container\Insert into Customer.EventHandlers[OnPreExecute]\Insert into SSIS_Load_Details"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container\Insert into Customer.EventHandlers[OnPostValidate]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="289.6,41.6"
          Id="{20faa86e-91f2-47bd-885d-777e1e4da0a8}"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container\Insert into Customer.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="289.6,41.6"
          Id="Package\Foreach Loop Container\Insert into Customer.EventHandlers[OnPostExecute]\Update Completed Status and Records Count"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container\Insert into Customer.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="247.2,41.6"
          Id="Package\Foreach Loop Container\Insert into Customer.EventHandlers[OnError]\Update SSIS_Load_Details to Failed"
          TopLeft="243.499996453524,226.499996706843" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Insert into Region">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container\Insert into Region\OLE DB Destination"
          TopLeft="126.499999091029,418.49999473989" />
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\Foreach Loop Container\Insert into Region\Sort"
          TopLeft="129.499998599291,128.499998614192" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Foreach Loop Container\Insert into Region\Lookup"
          TopLeft="131.999998033047,279.999995827675" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\Foreach Loop Container\Insert into Region\Flat File Source"
          TopLeft="137.499998033047,30.499999627471" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Region.Paths[Flat File Source Output]"
          TopLeft="213.099998033047,72.099999627471">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-34.7999994337559,56.399998986721"
              Start="0,0"
              End="-34.7999994337559,48.899998986721">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.1999994933605" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.1999994933605"
                    Point2="0,28.1999994933605"
                    Point3="-4,28.1999994933605" />
                  <mssgle:LineSegment
                    End="-30.7999994337559,28.1999994933605" />
                  <mssgle:CubicBezierSegment
                    Point1="-30.7999994337559,28.1999994933605"
                    Point2="-34.7999994337559,28.1999994933605"
                    Point3="-34.7999994337559,32.1999994933605" />
                  <mssgle:LineSegment
                    End="-34.7999994337559,48.899998986721" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Region.Paths[Sort Output]"
          TopLeft="178.299998599291,170.099998614192">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.0999994337559,109.899997213483"
              Start="0,0"
              End="10.0999994337559,102.399997213483">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.9499986067415" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.9499986067415"
                    Point2="0,54.9499986067415"
                    Point3="4,54.9499986067415" />
                  <mssgle:LineSegment
                    End="6.0999994337559,54.9499986067415" />
                  <mssgle:CubicBezierSegment
                    Point1="6.0999994337559,54.9499986067415"
                    Point2="10.0999994337559,54.9499986067415"
                    Point3="10.0999994337559,58.9499986067415" />
                  <mssgle:LineSegment
                    End="10.0999994337559,102.399997213483" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Region.Paths[Lookup No Match Output]"
          TopLeft="188.399998033047,321.599995827675">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23.7000010579824,96.8999989122153"
              Start="0,0"
              End="23.7000010579824,89.3999989122153">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.4499994561076" />
                  <mssgle:CubicBezierSegment
                    Point1="0,44.4499994561076"
                    Point2="0,48.4499994561076"
                    Point3="4,48.4499994561076" />
                  <mssgle:LineSegment
                    End="19.7000010579824,48.4499994561076" />
                  <mssgle:CubicBezierSegment
                    Point1="19.7000010579824,48.4499994561076"
                    Point2="23.7000010579824,48.4499994561076"
                    Point3="23.7000010579824,52.4499994561076" />
                  <mssgle:LineSegment
                    End="23.7000010579824,89.3999989122153" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-43.9563861897588,53.4499994561076,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Insert into Segment">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container\Insert into Segment\OLE DB Destination"
          TopLeft="20.9999996870752,564.799991953372" />
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\Foreach Loop Container\Insert into Segment\Sort"
          TopLeft="297.999995559454,165.999997526408" />
        <NodeLayout
          Size="160,41.6"
          Id="Package\Foreach Loop Container\Insert into Segment\Flat File Source 1"
          TopLeft="806.49998806417,54.4999992698431" />
        <NodeLayout
          Size="108,41.6"
          Id="Package\Foreach Loop Container\Insert into Segment\Merge"
          TopLeft="418.49999473989,294.499996587634" />
        <NodeLayout
          Size="106.4,41.6"
          Id="Package\Foreach Loop Container\Insert into Segment\Sort 1"
          TopLeft="729.499989658594,158.499998167157" />
        <NodeLayout
          Size="106.4,41.6"
          Id="Package\Foreach Loop Container\Insert into Segment\Sort 2"
          TopLeft="260.499996200204,378.407603735517" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\Foreach Loop Container\Insert into Segment\Flat File Source"
          TopLeft="309.99999538064,54.9999991804361" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Foreach Loop Container\Insert into Segment\Lookup"
          TopLeft="201.999996989965,461.199993234873" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Segment.Paths[Sort Output1]"
          TopLeft="782.699989658594,200.099998167157">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-293.533328252037,94.3999984204769"
              Start="0,0"
              End="-293.533328252037,86.8999984204769">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.8131377522527" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51.8131377522527"
                    Point2="0,55.8131377522527"
                    Point3="-4,55.8131377522527" />
                  <mssgle:LineSegment
                    End="-289.533328252037,55.8131377522527" />
                  <mssgle:CubicBezierSegment
                    Point1="-289.533328252037,55.8131377522527"
                    Point2="-293.533328252037,55.8131377522527"
                    Point3="-293.533328252037,59.8131377522527" />
                  <mssgle:LineSegment
                    End="-293.533328252037,86.8999984204769" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Segment.Paths[Sort Output]"
          TopLeft="346.799995559454,207.599997526408">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="125.699999180436,86.8999990612261"
              Start="0,0"
              End="125.699999180436,79.3999990612261">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.449999530613" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.449999530613"
                    Point2="0,43.449999530613"
                    Point3="4,43.449999530613" />
                  <mssgle:LineSegment
                    End="121.699999180436,43.449999530613" />
                  <mssgle:CubicBezierSegment
                    Point1="121.699999180436,43.449999530613"
                    Point2="125.699999180436,43.449999530613"
                    Point3="125.699999180436,47.449999530613" />
                  <mssgle:LineSegment
                    End="125.699999180436,79.3999990612261" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Segment.Paths[Merge Output 1]"
          TopLeft="472.49999473989,336.099996587634">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-158.799998539686,42.3076071478825"
              Start="0,0"
              End="-158.799998539686,34.8076071478825">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.1538035739413" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.1538035739413"
                    Point2="0,21.1538035739413"
                    Point3="-4,21.1538035739413" />
                  <mssgle:LineSegment
                    End="-154.799998539686,21.1538035739413" />
                  <mssgle:CubicBezierSegment
                    Point1="-154.799998539686,21.1538035739413"
                    Point2="-158.799998539686,21.1538035739413"
                    Point3="-158.799998539686,25.1538035739413" />
                  <mssgle:LineSegment
                    End="-158.799998539686,34.8076071478825" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Segment.Paths[Lookup No Match Output]"
          TopLeft="258.399996989965,502.799993234873">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-151.79999730289,61.9999987184993"
              Start="0,0"
              End="-151.79999730289,54.4999987184993">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.9999993592497" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.9999993592497"
                    Point2="0,30.9999993592497"
                    Point3="-4,30.9999993592497" />
                  <mssgle:LineSegment
                    End="-147.79999730289,30.9999993592497" />
                  <mssgle:CubicBezierSegment
                    Point1="-147.79999730289,30.9999993592497"
                    Point2="-151.79999730289,30.9999993592497"
                    Point3="-151.79999730289,34.9999993592497" />
                  <mssgle:LineSegment
                    End="-151.79999730289,54.4999987184993" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-131.706385370195,35.9999993592497,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Segment.Paths[Flat File Source Output1]"
          TopLeft="886.49998806417,96.0999992698431">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-103.799998405576,62.3999988973141"
              Start="0,0"
              End="-103.799998405576,54.8999988973141">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.199999448657" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.199999448657"
                    Point2="0,31.199999448657"
                    Point3="-4,31.199999448657" />
                  <mssgle:LineSegment
                    End="-99.7999984055759,31.199999448657" />
                  <mssgle:CubicBezierSegment
                    Point1="-99.7999984055759,31.199999448657"
                    Point2="-103.799998405576,31.199999448657"
                    Point3="-103.799998405576,35.199999448657" />
                  <mssgle:LineSegment
                    End="-103.799998405576,54.8999988973141" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Segment.Paths[Flat File Source Output]"
          TopLeft="385.59999538064,96.5999991804361">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-38.799999821186,69.3999983459715"
              Start="0,0"
              End="-38.799999821186,61.8999983459715">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.6999991729857" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.6999991729857"
                    Point2="0,34.6999991729857"
                    Point3="-4,34.6999991729857" />
                  <mssgle:LineSegment
                    End="-34.799999821186,34.6999991729857" />
                  <mssgle:CubicBezierSegment
                    Point1="-34.799999821186,34.6999991729857"
                    Point2="-38.799999821186,34.6999991729857"
                    Point3="-38.799999821186,38.6999991729857" />
                  <mssgle:LineSegment
                    End="-38.799999821186,61.8999983459715" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into Segment.Paths[Sort Output2]"
          TopLeft="313.699996200204,420.007603735517">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-55.2999992102387,41.1923894993562"
              Start="0,0"
              End="-55.2999992102387,33.6923894993562">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5961947496781" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.5961947496781"
                    Point2="0,20.5961947496781"
                    Point3="-4,20.5961947496781" />
                  <mssgle:LineSegment
                    End="-51.2999992102387,20.5961947496781" />
                  <mssgle:CubicBezierSegment
                    Point1="-51.2999992102387,20.5961947496781"
                    Point2="-55.2999992102387,20.5961947496781"
                    Point3="-55.2999992102387,24.5961947496781" />
                  <mssgle:LineSegment
                    End="-55.2999992102387,33.6923894993562" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Insert into State">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\Foreach Loop Container\Insert into State\Sort"
          TopLeft="93.4999991357327,147.49999833107" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Foreach Loop Container\Insert into State\Lookup"
          TopLeft="71.499999910593,378.499995335937" />
        <NodeLayout
          Size="120.8,41.6"
          Id="Package\Foreach Loop Container\Insert into State\Lookup 1"
          TopLeft="82.500000193715,226.499998047948" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container\Insert into State\OLE DB Destination"
          TopLeft="151.49999961257,486.499994620681" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\Foreach Loop Container\Insert into State\Flat File Source"
          TopLeft="6.49999998509881,4.50000001490116" />
        <NodeLayout
          Size="120.8,41.6"
          Id="Package\Foreach Loop Container\Insert into State\Lookup 2"
          TopLeft="186.999997213483,308.999995395541" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into State.Paths[Lookup No Match Output]"
          TopLeft="127.899999910593,420.099995335937">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="109.199999701977,66.3999992847441"
              Start="0,0"
              End="109.199999701977,58.8999992847441">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.199999642372" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.199999642372"
                    Point2="0,33.199999642372"
                    Point3="4,33.199999642372" />
                  <mssgle:LineSegment
                    End="105.199999701977,33.199999642372" />
                  <mssgle:CubicBezierSegment
                    Point1="105.199999701977,33.199999642372"
                    Point2="109.199999701977,33.199999642372"
                    Point3="109.199999701977,37.199999642372" />
                  <mssgle:LineSegment
                    End="109.199999701977,58.8999992847441" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1.20638686776156,38.199999642372,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into State.Paths[Lookup Match Output1]"
          TopLeft="247.399997213483,350.599995395541">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-119.49999730289,27.8999999403953"
              Start="0,0"
              End="-119.49999730289,20.3999999403953">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.94999997019764" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.94999997019764"
                    Point2="0,13.9499999701976"
                    Point3="-4,13.9499999701976" />
                  <mssgle:LineSegment
                    End="-115.49999730289,13.9499999701976" />
                  <mssgle:CubicBezierSegment
                    Point1="-115.49999730289,13.9499999701976"
                    Point2="-119.49999730289,13.9499999701976"
                    Point3="-119.49999730289,17.9499999701976" />
                  <mssgle:LineSegment
                    End="-119.49999730289,20.3999999403953" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-107.941385370195,18.9499999701976,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into State.Paths[Lookup Match Output]"
          TopLeft="142.900000193715,268.099998047948">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="104.499997019768,40.8999973475933"
              Start="0,0"
              End="104.499997019768,33.3999973475933">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.4499986737967" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.4499986737967"
                    Point2="0,20.4499986737967"
                    Point3="4,20.4499986737967" />
                  <mssgle:LineSegment
                    End="100.499997019768,20.4499986737967" />
                  <mssgle:CubicBezierSegment
                    Point1="100.499997019768,20.4499986737967"
                    Point2="104.499997019768,20.4499986737967"
                    Point3="104.499997019768,24.4499986737967" />
                  <mssgle:LineSegment
                    End="104.499997019768,33.3999973475933" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="4.058611791134,25.4499986737967,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into State.Paths[Flat File Source Output]"
          TopLeft="82.0999999850988,46.1000000149012">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="60.1999991506338,101.399998316169"
              Start="0,0"
              End="60.1999991506338,93.8999983161688">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.6999991580844" />
                  <mssgle:CubicBezierSegment
                    Point1="0,46.6999991580844"
                    Point2="0,50.6999991580844"
                    Point3="4,50.6999991580844" />
                  <mssgle:LineSegment
                    End="56.1999991506338,50.6999991580844" />
                  <mssgle:CubicBezierSegment
                    Point1="56.1999991506338,50.6999991580844"
                    Point2="60.1999991506338,50.6999991580844"
                    Point3="60.1999991506338,54.6999991580844" />
                  <mssgle:LineSegment
                    End="60.1999991506338,93.8999983161688" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert into State.Paths[Sort Output]"
          TopLeft="142.599999664724,189.09999833107">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.3999997168779"
              Start="0,0"
              End="0,29.8999997168779">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.8999997168779" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container 4\Insert into Orders Table">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Orders Table\OLE DB Destination"
          TopLeft="454.499995544553,507.49999576807" />
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Orders Table\Sort"
          TopLeft="171.499998867512,235.499997913837" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Orders Table\Lookup"
          TopLeft="299.999995529652,288.999995693565" />
        <NodeLayout
          Size="138.4,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Orders Table\Row Count 1"
          TopLeft="351.499996632338,416.499996438623" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Orders Table\Flat File Source"
          TopLeft="133.499998092651,49.4999993443489" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Orders Table\Row Count"
          TopLeft="131.499998569489,133.499998539686" />
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Orders Table.Paths[Sort Output]"
          TopLeft="269.099998867512,256.299997913837">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30.8999966621399,53.4999977797272"
              Start="0,0"
              End="23.3999966621399,53.4999977797272">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="11.44999833107,0" />
                  <mssgle:CubicBezierSegment
                    Point1="11.44999833107,0"
                    Point2="15.44999833107,0"
                    Point3="15.44999833107,4" />
                  <mssgle:LineSegment
                    End="15.44999833107,49.4999977797272" />
                  <mssgle:CubicBezierSegment
                    Point1="15.44999833107,49.4999977797272"
                    Point2="15.44999833107,53.4999977797272"
                    Point3="19.44999833107,53.4999977797272" />
                  <mssgle:LineSegment
                    End="23.3999966621399,53.4999977797272" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Orders Table.Paths[Row Count Output 11]"
          TopLeft="420.699996632338,458.099996438623">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="119.399998912215,49.3999993294476"
              Start="0,0"
              End="119.399998912215,41.8999993294476">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.6999996647238" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.6999996647238"
                    Point2="0,24.6999996647238"
                    Point3="4,24.6999996647238" />
                  <mssgle:LineSegment
                    End="115.399998912215,24.6999996647238" />
                  <mssgle:CubicBezierSegment
                    Point1="115.399998912215,24.6999996647238"
                    Point2="119.399998912215,24.6999996647238"
                    Point3="119.399998912215,28.6999996647238" />
                  <mssgle:LineSegment
                    End="119.399998912215,41.8999993294476" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Orders Table.Paths[Row Count Output 1]"
          TopLeft="196.299998569489,175.099998539686">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="24.0000002980232,60.3999993741512"
              Start="0,0"
              End="24.0000002980232,52.8999993741512">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.1999996870756" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.1999996870756"
                    Point2="0,30.1999996870756"
                    Point3="4,30.1999996870756" />
                  <mssgle:LineSegment
                    End="20.0000002980232,30.1999996870756" />
                  <mssgle:CubicBezierSegment
                    Point1="20.0000002980232,30.1999996870756"
                    Point2="24.0000002980232,30.1999996870756"
                    Point3="24.0000002980232,34.1999996870756" />
                  <mssgle:LineSegment
                    End="24.0000002980232,52.8999993741512" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Orders Table.Paths[Lookup No Match Output]"
          TopLeft="356.399995529652,330.599995693565">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="64.3000011026859,85.9000007450579"
              Start="0,0"
              End="64.3000011026859,78.4000007450579">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.950000372529" />
                  <mssgle:CubicBezierSegment
                    Point1="0,38.950000372529"
                    Point2="0,42.950000372529"
                    Point3="4,42.950000372529" />
                  <mssgle:LineSegment
                    End="60.3000011026859,42.950000372529" />
                  <mssgle:CubicBezierSegment
                    Point1="60.3000011026859,42.950000372529"
                    Point2="64.3000011026859,42.950000372529"
                    Point3="64.3000011026859,46.950000372529" />
                  <mssgle:LineSegment
                    End="64.3000011026859,78.4000007450579" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-23.656386167407,47.950000372529,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Orders Table.Paths[Flat File Source Output]"
          TopLeft="209.099998092651,91.0999993443489">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-12.7999995231628,42.3999991953373"
              Start="0,0"
              End="-12.7999995231628,34.8999991953373">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.1999995976686" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.1999995976686"
                    Point2="0,21.1999995976686"
                    Point3="-4,21.1999995976686" />
                  <mssgle:LineSegment
                    End="-8.79999952316277,21.1999995976686" />
                  <mssgle:CubicBezierSegment
                    Point1="-8.79999952316277,21.1999995976686"
                    Point2="-12.7999995231628,21.1999995976686"
                    Point3="-12.7999995231628,25.1999995976686" />
                  <mssgle:LineSegment
                    End="-12.7999995231628,34.8999991953373" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnPreExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="216.8,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnPreExecute]\Insert into SSIS_Load_Details"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="155.2,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnPostExecute]\Expression Task"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="289.6,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnPostExecute]\Update Completed Status and Records Count"
          TopLeft="60,60" />
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint]"
          TopLeft="160.7,26.3">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="44.1,33.7"
              Start="0,0"
              End="44.1,26.2">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="40.1,0" />
                  <mssgle:CubicBezierSegment
                    Point1="40.1,0"
                    Point2="44.1,0"
                    Point3="44.1,4" />
                  <mssgle:LineSegment
                    End="44.1,26.2" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="247.2,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Orders Table.EventHandlers[OnError]\Update SSIS_Load_Details to Failed"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Foreach Loop Container 4\Insert into Return_Reason">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason\Lookup"
          TopLeft="277.499997735024,226.499998494983" />
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason\Sort"
          TopLeft="206.499997451901,153.499998241663" />
        <NodeLayout
          Size="138.4,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason\Row Count 1"
          TopLeft="528.499992653727,267.499996542931" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason\Row Count"
          TopLeft="26.4999996870756,118.499998316169" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason\OLE DB Destination"
          TopLeft="278.499997273088,332.499996468425" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason\Flat File Source"
          TopLeft="110.499998435378,48.4999993592501" />
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason.Paths[Sort Output]"
          TopLeft="255.299997451902,195.099998241663">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="78.600000283122,31.4000002533197"
              Start="0,0"
              End="78.600000283122,23.9000002533197">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.7000001266599" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.7000001266599"
                    Point2="0,15.7000001266599"
                    Point3="4,15.7000001266599" />
                  <mssgle:LineSegment
                    End="74.600000283122,15.7000001266599" />
                  <mssgle:CubicBezierSegment
                    Point1="74.600000283122,15.7000001266599"
                    Point2="78.600000283122,15.7000001266599"
                    Point3="78.600000283122,19.7000001266599" />
                  <mssgle:LineSegment
                    End="78.600000283122,23.9000002533197" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason.Paths[Row Count Output 11]"
          TopLeft="597.699992653727,309.099996542931">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-233.599995380639,23.3999999254944"
              Start="0,0"
              End="-233.599995380639,15.8999999254944">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.6999999627472" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.6999999627472"
                    Point2="0,11.6999999627472"
                    Point3="-4,11.6999999627472" />
                  <mssgle:LineSegment
                    End="-229.599995380639,11.6999999627472" />
                  <mssgle:CubicBezierSegment
                    Point1="-229.599995380639,11.6999999627472"
                    Point2="-233.599995380639,11.6999999627472"
                    Point3="-233.599995380639,15.6999999627472" />
                  <mssgle:LineSegment
                    End="-233.599995380639,15.8999999254944" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason.Paths[Row Count Output 1]"
          TopLeft="156.099999687076,139.299998316169">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="50.3999977648253,34.9999999254942"
              Start="0,0"
              End="42.8999977648253,34.9999999254942">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="21.1999988824127,0" />
                  <mssgle:CubicBezierSegment
                    Point1="21.1999988824127,0"
                    Point2="25.1999988824127,0"
                    Point3="25.1999988824127,4" />
                  <mssgle:LineSegment
                    End="25.1999988824127,30.9999999254942" />
                  <mssgle:CubicBezierSegment
                    Point1="25.1999988824127,30.9999999254942"
                    Point2="25.1999988824127,34.9999999254942"
                    Point3="29.1999988824127,34.9999999254942" />
                  <mssgle:LineSegment
                    End="42.8999977648253,34.9999999254942" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason.Paths[Lookup No Match Output]"
          TopLeft="390.299997735024,247.299998494983">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="138.199994918703,40.9999980479476"
              Start="0,0"
              End="130.699994918703,40.9999980479476">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="65.0999974593517,0" />
                  <mssgle:CubicBezierSegment
                    Point1="65.0999974593517,0"
                    Point2="69.0999974593517,0"
                    Point3="69.0999974593517,4" />
                  <mssgle:LineSegment
                    End="69.0999974593517,36.9999980479476" />
                  <mssgle:CubicBezierSegment
                    Point1="69.0999974593517,36.9999980479476"
                    Point2="69.0999974593517,40.9999980479476"
                    Point3="73.0999974593517,40.9999980479476" />
                  <mssgle:LineSegment
                    End="130.699994918703,40.9999980479476" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="13.2936107406017,-17.609375,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason.Paths[Flat File Source Output]"
          TopLeft="186.099998435378,90.0999993592501">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-94.7999987483024,28.3999989569187"
              Start="0,0"
              End="-94.7999987483024,20.8999989569187">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.1999994784594" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.1999994784594"
                    Point2="0,14.1999994784594"
                    Point3="-4,14.1999994784594" />
                  <mssgle:LineSegment
                    End="-90.7999987483024,14.1999994784594" />
                  <mssgle:CubicBezierSegment
                    Point1="-90.7999987483024,14.1999994784594"
                    Point2="-94.7999987483024,14.1999994784594"
                    Point3="-94.7999987483024,18.1999994784594" />
                  <mssgle:LineSegment
                    End="-94.7999987483024,20.8999989569187" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnPreExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="216.8,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnPreExecute]\Insert into SSIS_Load_Details"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="155.2,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnPostExecute]\Expression Task"
          TopLeft="60,60" />
        <NodeLayout
          Size="289.6,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnPostExecute]\Update Completed Status and Records Count"
          TopLeft="114.5,114.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint]"
          TopLeft="215.2,80.8">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="44.1,33.7"
              Start="0,0"
              End="44.1,26.2">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="40.1,0" />
                  <mssgle:CubicBezierSegment
                    Point1="40.1,0"
                    Point2="44.1,0"
                    Point3="44.1,4" />
                  <mssgle:LineSegment
                    End="44.1,26.2" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="247.2,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Return_Reason.EventHandlers[OnError]\Update SSIS_Load_Details to Failed"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Foreach Loop Container 4\Insert into Returns">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="138.4,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Returns\Row Count 1"
          TopLeft="394.499994203448,420.499993816018" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Returns\Row Count"
          TopLeft="344.499996289611,89.500000089407" />
        <NodeLayout
          Size="120.8,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Returns\Lookup 2"
          TopLeft="797.499991774559,410.499997541309" />
        <NodeLayout
          Size="120.8,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Returns\Lookup 1"
          TopLeft="382.499995276332,235.499997466803" />
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Returns\Sort"
          TopLeft="618.499993100762,358.499996975064" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Returns\OLE DB Destination"
          TopLeft="300.499998733401,488.499995931983" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Returns\Flat File Source"
          TopLeft="224.499996736646,30.499999627471" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Returns\Lookup"
          TopLeft="182.499997809529,145.499998360872" />
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Returns.Paths[Lookup Match Output1]"
          TopLeft="442.899995276332,277.099997466803">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="224.39999782443,81.3999995082617"
              Start="0,0"
              End="224.39999782443,73.8999995082617">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.6999997541309" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.6999997541309"
                    Point2="0,40.6999997541309"
                    Point3="4,40.6999997541309" />
                  <mssgle:LineSegment
                    End="220.39999782443,40.6999997541309" />
                  <mssgle:CubicBezierSegment
                    Point1="220.39999782443,40.6999997541309"
                    Point2="224.39999782443,40.6999997541309"
                    Point3="224.39999782443,44.6999997541309" />
                  <mssgle:LineSegment
                    End="224.39999782443,73.8999995082617" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="64.008612193465,45.6999997541309,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Returns.Paths[Lookup Match Output]"
          TopLeft="238.899997809529,187.099998360872">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="203.999997466803,48.3999991059303"
              Start="0,0"
              End="203.999997466803,40.8999991059303">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.1999995529652" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.1999995529652"
                    Point2="0,24.1999995529652"
                    Point3="4,24.1999995529652" />
                  <mssgle:LineSegment
                    End="199.999997466803,24.1999995529652" />
                  <mssgle:CubicBezierSegment
                    Point1="199.999997466803,24.1999995529652"
                    Point2="203.999997466803,24.1999995529652"
                    Point3="203.999997466803,28.1999995529652" />
                  <mssgle:LineSegment
                    End="203.999997466803,40.8999991059303" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="53.8086120146515,29.1999995529652,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Returns.Paths[Flat File Source Output]"
          TopLeft="375.699996736646,51.299999627471">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33.5999995529652,38.200000461936"
              Start="0,0"
              End="33.5999995529652,30.700000461936">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="29.5999995529652,0" />
                  <mssgle:CubicBezierSegment
                    Point1="29.5999995529652,0"
                    Point2="33.5999995529652,0"
                    Point3="33.5999995529652,4" />
                  <mssgle:LineSegment
                    End="33.5999995529652,30.700000461936" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Returns.Paths[Sort Output]"
          TopLeft="716.099993100762,379.299996975064">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="81.3999986737967,52.0000005662442"
              Start="0,0"
              End="73.8999986737967,52.0000005662442">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="36.6999993368984,0" />
                  <mssgle:CubicBezierSegment
                    Point1="36.6999993368984,0"
                    Point2="40.6999993368984,0"
                    Point3="40.6999993368984,4" />
                  <mssgle:LineSegment
                    End="40.6999993368984,48.0000005662442" />
                  <mssgle:CubicBezierSegment
                    Point1="40.6999993368984,48.0000005662442"
                    Point2="40.6999993368984,52.0000005662442"
                    Point3="44.6999993368984,52.0000005662442" />
                  <mssgle:LineSegment
                    End="73.8999986737967,52.0000005662442" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Returns.Paths[Row Count Output 11]"
          TopLeft="463.699994203448,462.099993816018">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-77.5999954700474,26.4000021159649"
              Start="0,0"
              End="-77.5999954700474,18.9000021159649">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.20000105798246" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.20000105798246"
                    Point2="0,13.2000010579825"
                    Point3="-4,13.2000010579825" />
                  <mssgle:LineSegment
                    End="-73.5999954700474,13.2000010579825" />
                  <mssgle:CubicBezierSegment
                    Point1="-73.5999954700474,13.2000010579825"
                    Point2="-77.5999954700474,13.2000010579825"
                    Point3="-77.5999954700474,17.2000010579825" />
                  <mssgle:LineSegment
                    End="-77.5999954700474,18.9000021159649" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Returns.Paths[Row Count Output 1]"
          TopLeft="344.499996289611,110.300000089407">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-49.1999984800816,55.9999982714653"
              Start="0,0"
              End="-41.6999984800816,55.9999982714653">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-20.5999992400408,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.5999992400408,0"
                    Point2="-24.5999992400408,0"
                    Point3="-24.5999992400408,4" />
                  <mssgle:LineSegment
                    End="-24.5999992400408,51.9999982714653" />
                  <mssgle:CubicBezierSegment
                    Point1="-24.5999992400408,51.9999982714653"
                    Point2="-24.5999992400408,55.9999982714653"
                    Point3="-28.5999992400408,55.9999982714653" />
                  <mssgle:LineSegment
                    End="-41.6999984800816,55.9999982714653" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Returns.Paths[Lookup No Match Output]"
          TopLeft="797.499991774559,439.099995678664">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-264.599997571111,0"
              Start="0,0"
              End="-257.099997571111,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-257.099997571111,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-184.356385504305,5,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnPreExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="216.8,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnPreExecute]\Insert into SSIS_Load_Details"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="155.2,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnPostExecute]\Expression Task"
          TopLeft="60,60" />
        <NodeLayout
          Size="289.6,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnPostExecute]\Update Completed Status and Records Count"
          TopLeft="114.5,114.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint]"
          TopLeft="215.2,80.8">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="44.1,33.7"
              Start="0,0"
              End="44.1,26.2">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="40.1,0" />
                  <mssgle:CubicBezierSegment
                    Point1="40.1,0"
                    Point2="44.1,0"
                    Point3="44.1,4" />
                  <mssgle:LineSegment
                    End="44.1,26.2" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="247.2,41.6"
          Id="Package\Foreach Loop Container 4\Insert into Returns.EventHandlers[OnError]\Update SSIS_Load_Details to Failed"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>